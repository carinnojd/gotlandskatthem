%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Johan Carlgren) ()%%Title: (svart.eps)%%CreationDate: 2009-05-11 10.14%%Canvassize: 16383%%BoundingBox: 101 203 750 394%%HiResBoundingBox: 101.2559 203.166 749.7773 393.6543%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registrering])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7803 421.5 296.7803%AI3_TileBox: 17.9448 18.1396 800.9453 577.1401%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 841.8896 595.2803%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -175 611.2803 1.21 1445 749 18 0 0 346 230 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 40 8%%BeginData: 5554 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0DFFA8A852522627202727527DFFFFA8277DFD6EFFA85227F826%F827F826F827F826F8522026527DA8FD6BFFA82627202726272027262720%2726272027262720277D7D527DFD66FFA8F827F826F827F826F827F826F8%27F826F827F826F827F826A8FD66FF272726272027262720272627202726%2720272627202726527DFD66FF5226F827F826F827F826F8272026F827F8%26F8275126F82752FD65FFA8272726272027262720272627272726272027%2627205227272052FD39FFA87DFD29FFA8F826F827F826F827F826F82727%52F827F826F827F826F82720517DFD0DFFA8A8FD12FFA8A8A8FD0BFFA852%275276FFA8A8A87DF826A8FD0EFFA8A8FD17FF7D26272027262720272627%20272652522726272027262720277D524BFD0DFF7D2726FD12FF52207CFD%0AFFA827262720272727207D267C7DFD0EFF7D2052FD16FF7DF8272026F8%27F826F827F826F82752A7F8272026F827272726527D7D52A8FD08FFA8A8%FF7DF851FD12FF272652FD0AFF7DF827F8527D2727A82627FD09FFA8A8FF%FFA8A8FF522627FD15FFA82627202726272727262720272627202752A827%2726272027277D7D52262726FD07FFA8277DFF522776FD12FF4B26A8FD0A%FF7D27202727A820A87D27A8FD08FFA726A8FFA8267DFF52267DFD15FF26%27F826F82752FF2727F826F827F826F8275276F827F826F827527DF82720%7DFFFF525252FF7D26F84BA84BF8A1FFA827767D52A8A8277D7D5252FFFF%7D4B52F827A8FF525251A8FD06FF522727A8522627277DFFFFA852527D76%A87DF827527DF82727A82727525227A8FFA8525152FFA852527D277D7D52%52FFFF7D272627202751FFFFFF7D4B20272627202752A87DA87D7D527DA8%FFFFFFA8FFFFFF51272027527D20274BA72727A8A82027262720FF522720%272627FFA82627202727FF7D27272752FD05FF7D7D7DFFFF272727267DFF%FF2627202726A852272752522726527D27262720277DFF262727277D7D26%27202726272027A8A827F827F826F8A8FD04FFFD04A87DA8A8FD0FFF7D27%277DF8277D2627FF7D2627FF2726517DF852FF52F852522727FF26277D7D%F852FF7DF82752FD05FF2727F87DFF76F87D762726FF5227277DF827FF7D%F87DFF7DF852FFA8F8275226F8A852262751F8A852275152F84B5226F8FF%A8262720272676FD1BFF7D20FD042752267DFF7D2652A827262727277CFF%2727A87D207DA827205227277DFF7D5220277DFFFFFF5227202727522027%A87D2027764B2027272752FF27277DFF522752FF7D2752A82627A8272627%52A1A85220A87D2752A8264BFF5227F826F8277DFD1BFF7C26F827F87D27%27205227272052F827F826F8275226F8A827262652F826F827F827262752%4BF87DFFFFA851F826F827F82627FF2726F87D2626F827F8275127F82752%27F8275227F87D7D27F8522027267D275220267D52F87D5227F852522627%202727FD15FFA8FFA8FD05FF4B27277DFF7D26277D7D26277D52267D7D27%5152267DFF7D20527D5220A8522751A82727267DFD04FF51272027262720%A8FF7D207DFF7D207D7D2727A8522727A87D27277D2752A8A826277DA827%2720A87D2752FF2752A8A826277DF827F826F852FD0FFFA87D76274B2626%F82727527DFFFFFFA8FD05FFA8FFFFA8A8FFA8FFFFFFA8FFA8A8FFFFFFA8%A8FFA8A8FFFFA8FFFFFFA8A8FD05FFA8F826F827F852FFFFFFA8FFFFA8A8%FFFFA8FFFFFFA8FFFFFFA8FFFFA8FD04FFA8FFFFFFA8FFFFFFA8FFA8A8FF%FFFFCAA8FF272027262727FD0DFF7D52202726272027262720272627207D%A8FD2AFFA8524B52A8FD2DFFF826F827F827A8FD09FF7D52F827F826F827%F826F827F826F827F826F8277DFD2BFFA8FD2FFF272027262720FD09FF4B%2720272627202726272027262720272627202726277DFD5AFF2726F827F8%2652FD07FFA852274B26272027F827F826F827F826F827F826F827F8267D%FD59FF7D262720272627FD0CFFA8FFA8FFFD04A87D7C2627202726272027%2627A8FD58FF7D27F826F827F87DFD16FF5226F827F826F827F852FD59FF%26272027262720A8FD16FF7D2726272027262726FD59FF52F826F8272026%20FD17FF7D27F826F827F8267DFD58FF7D2726272027262727FD17FF2727%26272027267DFD59FF2627F826F827F826F8A8FD15FF51F827F826F82752%FD59FFA82627202726272027267DFD14FF202726272027267DFD5AFF52F8%26F827F826F827F8277DFD11FF2726F827F826F8277DFD5AFFA827262720%27262720272627277DA8FD0CFFA8272726272027262720A8FD5BFF7D27F8%26F827F826F827F826F827275252FD047DA17D7D5227F826F827F826F827%F827A8FD5CFF7D2720272627202726272027262720272627202726272027%262720272627202726277DFD5EFF7D26F827F826F827F826F827F826F827%F826F827F826F827F826F827F826F82727FD60FFA8522027262720272627%202726272027262720272627202726272027262720FD62FFA87DF827F826%F827F826F827F826F827F826F827F826F827F826F82720A8FD65FF522720%27262720272627202726272027262720272627202751FD68FFA8522627F8%26F827F826F827F826F827F826F827F8277DFD6CFF7D7D27272027262720%2726272027265152A8FD71FFA8A87D7D527D527D527D7DA8A8FD60FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Kalkering) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobes plug-in Omslag) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Direktf\212rg-plug-in) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \205verg\214ngar) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spridningspensel) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spridningspensel) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe M\232nsterpenslar) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe M\232nsterpenslar) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Konstn\212rliga penslar) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Konstn\212rliga penslar) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Kalligrafisk pensel) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Stansad form) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Koppar, radiell)(Koppar, radiell) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linj\612r \632vertoning)(Linj\612r \632vertoning) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Mjuk svart vinjett)(Mjuk svart vinjett) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radiell \632vertoning)(Radiell \632vertoning) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Solnedg\614ng - \632ken)(Solnedg\614ng - \632ken) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1E1F><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3F40><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535252>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Tona till svart)(Tona till svart) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fiskm\632nster)(Fiskm\632nster) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3897.5 4615.7153 m-3683.8999 4615.7153 L-3683.8999 4607.9146 L-3897.5 4607.9146 L-3897.5 4615.7153 Ln0 O0 0 0 1 k-3897.5 4611.8154 m-3887.4856 4614.3071 -3880.6863 4615.6553 -3868.7007 4615.7153 c-3855.7185 4615.7803 -3790.6997 4615.7153 y-3725.6816 4615.7803 -3712.6997 4615.7153 v-3700.7124 4615.6553 -3693.9136 4614.3071 -3683.8999 4611.8154 C-3693.9136 4609.3237 -3700.7124 4607.9756 -3712.6997 4607.9146 c-3725.6816 4607.8491 -3790.6997 4607.9146 y-3855.7185 4607.8491 -3868.7007 4607.9146 v-3880.6863 4607.9756 -3887.4856 4609.3237 -3897.5 4611.8154 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7770 8488.2803 m-7672.2451 8488.2803 L-7672.2451 8467.5645 L-7770 8467.5645 L-7770 8488.2803 Ln0 O0 g1 XR-7672.5586 8483.5986 m-7687.8247 8469.8105 -7705.5537 8490.7295 -7720.9277 8478.4463 C-7719.4199 8472.7939 -7713.7598 8479.748 -7711.5176 8475.1016 C-7711.4341 8473.501 -7714.6313 8475.001 -7714.5127 8472.8809 C-7712.6245 8469.4717 -7707.8955 8469.9688 -7706.5664 8474.0176 C-7700.3115 8472.0479 -7693.7734 8466.1045 -7687.7847 8467.8975 C-7686.2671 8469.248 -7687.0708 8470.4316 -7686.6211 8471.708 C-7679.2871 8467.2725 -7670.4644 8476.4082 -7672.5586 8483.5986 Cf-7716.2842 8485.2129 m-7716.8247 8485.5889 -7715.9277 8486.7002 -7716.2529 8487.1885 C-7718.3237 8486.4365 -7720.6919 8482.3584 -7722.4731 8479.5908 C-7722.2632 8481.1201 -7723.6641 8482.4443 -7725.0781 8480.2129 C-7725.2383 8479.3955 -7724.3667 8479.1084 -7724.6729 8478.2168 C-7725.8306 8476.6484 -7726.8472 8478.1338 -7727.7798 8477.9053 C-7728.3184 8477.1416 -7728.6143 8476.499 -7728.6816 8475.9746 C-7722.5537 8473.1543 -7715.9263 8484.957 -7709.7456 8485.3828 C-7709.9048 8488.3955 -7713.8555 8490.0811 -7716.2842 8485.2129 Cfuu0 XR-7713.1602 8479.9404 m-7728.0142 8473.4004 -7749.4731 8477.6221 -7765.3687 8477.5996 c-7771.2988 8477.5928 -7760.8965 8477.6016 -7766.8267 8477.6064 cN0 O0 g-7710.8052 8478.7197 m-7728.1475 8471.5439 -7747.9341 8476.3359 -7766.0532 8476.2666 C-7766.8608 8477.1533 -7767.6685 8478.042 -7768.4751 8478.9277 C-7767.6973 8478.9277 -7766.9194 8478.9268 -7766.1421 8478.9336 C-7765.3345 8478.0459 -7764.5273 8477.1592 -7763.7202 8476.2725 C-7764.3516 8476.2822 -7764.9844 8476.2754 -7765.6157 8476.2754 c-7767.3735 8476.2783 -7771.9165 8478.9424 -7768.0376 8478.9375 c-7767.4063 8478.9375 -7766.7734 8478.9443 -7766.1421 8478.9336 c-7764.4155 8478.9063 -7759.8184 8476.3037 -7763.7202 8476.2725 c-7764.4976 8476.2637 -7765.2759 8476.2666 -7766.0532 8476.2666 c-7767.8081 8476.2656 -7772.3574 8478.9131 -7768.4751 8478.9277 c-7751.1177 8478.9951 -7732.1025 8474.2939 -7715.5151 8481.1592 c-7714.1035 8481.7441 -7708.8081 8479.5469 -7710.8052 8478.7197 c-7710.8052 8478.7197 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7770 8488.2803 m-7758.0078 8488.2803 L-7758.0078 8477.6436 L-7770 8477.6436 L-7770 8488.2803 Ln-7769.3218 8477.6436 m-7769.3218 8481.5928 L-7769.3218 8482.6279 L-7769.3218 8483.2666 L-7769.3218 8484.3652 L-7769.3218 8488.2803 L-7758.6865 8488.2803 L-7758.6865 8484.3652 L-7758.6865 8483.2666 L-7758.6865 8482.6279 L-7758.6865 8481.5928 L-7758.6865 8477.6436 L-7769.3218 8477.6436 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7758.0078 8484.3652 m-7758.0078 8483.7197 L-7770 8483.7217 L-7770 8484.3652 L-7770 8484.4307 L-7758.0078 8484.4297 L-7758.0078 8484.3652 Lf-7758.0078 8481.5928 m-7770 8481.5928 L-7770 8482.3018 L-7758.0078 8482.3018 L-7758.0078 8481.5928 Lf0.15 1 0.9 0.1 k-7758.0078 8483.332 m-7770 8483.332 L-7770 8483.7217 L-7758.0078 8483.7197 L-7758.0078 8483.332 Lf-7758.0078 8482.6279 m-7758.0078 8482.3018 L-7770 8482.3018 L-7770 8482.6279 L-7770 8482.6924 L-7758.0078 8482.6924 L-7758.0078 8482.6279 Lf0 1 1 0 k-7758.0078 8483.2666 m-7758.0078 8482.6924 L-7770 8482.6924 L-7770 8483.2666 L-7770 8483.332 L-7758.0078 8483.332 L-7758.0078 8483.2666 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7770 8487.085 m-7759.3638 8487.085 L-7759.3638 8476.4482 L-7770 8476.4482 L-7770 8487.085 Ln-7770 8476.4482 m-7770 8480.3389 L-7770 8481.0488 L-7770 8481.4316 L-7770 8482.0732 L-7770 8482.4619 L-7770 8483.1709 L-7770 8487.085 L-7759.3638 8487.085 L-7759.3638 8476.4482 L-7770 8476.4482 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7763.9585 8488.2803 m-7763.2515 8488.2803 L-7763.2607 8483.2363 L-7757.5229 8483.2354 L-7757.5229 8482.5244 L-7763.9707 8482.5273 L-7763.9585 8488.2803 Lf-7765.6055 8480.8145 m-7765.8696 8481.0771 -7766.0215 8481.4434 -7766.0215 8481.8164 C-7766.0073 8488.2803 L-7765.2979 8488.2803 L-7765.3125 8481.8164 L-7765.3125 8481.6299 -7765.2363 8481.4482 -7765.1045 8481.3154 c-7764.9717 8481.1836 -7764.7891 8481.1084 -7764.6021 8481.1084 C-7757.5229 8481.1084 L-7757.5229 8480.3984 L-7764.6021 8480.3984 L-7764.9761 8480.3984 -7765.3418 8480.5498 -7765.6055 8480.8145 cf0.15 1 0.9 0.1 k-7764.2827 8488.2803 m-7763.9585 8488.2803 L-7763.9707 8482.5273 L-7757.5229 8482.5244 L-7757.5229 8482.1357 L-7764.2827 8482.1357 L-7764.2827 8488.2803 Lf-7765.1045 8481.3154 m-7765.2363 8481.4482 -7765.3125 8481.6299 -7765.3125 8481.8164 C-7765.2979 8488.2803 L-7764.9219 8488.2803 L-7764.9219 8481.8164 L-7764.9219 8481.7324 -7764.8877 8481.6514 -7764.8281 8481.5908 c-7764.7695 8481.5322 -7764.6865 8481.499 -7764.6025 8481.499 C-7757.5229 8481.499 L-7757.5229 8481.1084 L-7764.6021 8481.1084 L-7764.7891 8481.1084 -7764.9717 8481.1836 -7765.1045 8481.3154 cf0 1 1 0 k-7764.8281 8481.5908 m-7764.8877 8481.6514 -7764.9219 8481.7324 -7764.9219 8481.8164 C-7764.9219 8488.2803 L-7764.2827 8488.2803 L-7764.2827 8482.1357 L-7757.5229 8482.1357 L-7757.5229 8481.499 L-7764.6025 8481.499 L-7764.6865 8481.499 -7764.7695 8481.5322 -7764.8281 8481.5908 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7770 8488.2803 m-7758.0078 8488.2803 L-7758.0078 8477.6436 L-7770 8477.6436 L-7770 8488.2803 Ln-7769.0117 8477.6436 m-7769.0117 8481.5928 L-7769.0117 8482.6279 L-7769.0117 8483.2666 L-7769.0117 8484.3652 L-7769.0117 8488.2803 L-7758.3765 8488.2803 L-7758.3765 8484.3652 L-7758.3765 8483.2666 L-7758.3765 8482.6279 L-7758.3765 8481.5928 L-7758.3765 8477.6436 L-7769.0117 8477.6436 Ln0 O0.15 1 0.9 0.1 k-7758.0078 8483.332 m-7770 8483.332 L-7770 8483.7217 L-7758.0078 8483.7197 L-7758.0078 8483.332 Lf-7758.0078 8482.6279 m-7758.0078 8482.3018 L-7770 8482.3018 L-7770 8482.6279 L-7770 8482.6924 L-7758.0078 8482.6924 L-7758.0078 8482.6279 Lf0 1 1 0 k-7758.0078 8483.2666 m-7758.0078 8482.6924 L-7770 8482.6924 L-7770 8483.2666 L-7770 8483.332 L-7758.0078 8483.332 L-7758.0078 8483.2666 Lf1 Ap0.746094 0.675781 0.667969 0.898438 k-7768.2715 8484.4307 m-7770 8484.4307 L-7770 8481.5928 L-7768.2715 8481.5928 L-7768.2715 8484.4307 Lf0.15 1 0.9 0.1 k-7767.5967 8484.4141 m-7768.4492 8484.4141 L-7768.4492 8481.5771 L-7767.5967 8481.5771 L-7767.5967 8484.4141 Lf0 Ap0.746094 0.675781 0.667969 0.898438 k-7758.0078 8484.3652 m-7758.0078 8483.7197 L-7770 8483.7217 L-7770 8484.3652 L-7770 8484.4307 L-7758.0078 8484.4297 L-7758.0078 8484.3652 Lf-7758.0078 8481.5928 m-7770 8481.5928 L-7770 8482.3018 L-7758.0078 8482.3018 L-7758.0078 8481.5928 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7770 8488.2803 m-7758.6099 8488.2803 L-7758.6099 8477.6436 L-7770 8477.6436 L-7770 8488.2803 Ln-7769.2461 8484.3652 m-7769.2461 8488.2803 L-7758.6099 8488.2803 L-7758.6099 8477.6436 L-7769.2461 8477.6436 L-7769.2461 8481.5352 L-7769.2461 8484.3652 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7763.6245 8484.3018 m-7763.6245 8483.6572 L-7770 8483.6572 L-7770 8484.3018 L-7770 8484.3652 L-7763.6245 8484.3652 L-7763.6245 8484.3018 Lf-7763.6245 8481.5283 m-7770 8481.5283 L-7770 8482.2383 L-7763.6245 8482.2383 L-7763.6245 8481.5283 Lf0.15 1 0.9 0.1 k-7763.6245 8483.2666 m-7770 8483.2666 L-7770 8483.6572 L-7763.6245 8483.6572 L-7763.6245 8483.2666 Lf-7763.6245 8482.5635 m-7763.6245 8482.2383 L-7770 8482.2383 L-7770 8482.5635 L-7770 8482.6289 L-7763.6245 8482.6289 L-7763.6245 8482.5635 Lf0 1 1 0 k-7763.6245 8483.2012 m-7763.6245 8482.6289 L-7770 8482.6289 L-7770 8483.2012 L-7770 8483.2666 L-7763.6245 8483.2666 L-7763.6245 8483.2012 LfU-7769.2461 8488.2803 m-7758.6099 8488.2803 L-7758.6099 8477.6436 L-7769.2461 8477.6436 L-7769.2461 8488.2803 Ln-7758.7241 8482.9619 m-7766.8125 8487.6318 LN0 O0.746094 0.675781 0.667969 0.898438 k-7766.4814 8482.2402 m-7766.4814 8479.4209 L-7760.3535 8482.958 L-7766.4814 8486.4961 L-7766.4814 8483.6572 L-7766.8125 8483.6572 L-7766.8125 8484.3652 L-7766.8125 8487.6318 L-7758.7241 8482.9619 L-7766.8125 8478.293 L-7766.8125 8481.5313 L-7766.8125 8482.2402 L-7766.4814 8482.2402 Lf0.15 1 0.9 0.1 k-7766.4814 8486.4961 m-7760.3535 8482.958 L-7766.4814 8479.4209 L-7766.4814 8482.2402 L-7766.4814 8482.6279 L-7766.3472 8482.6279 L-7766.2148 8482.2559 -7765.8633 8481.9873 -7765.4453 8481.9873 c-7764.9155 8481.9873 -7764.4849 8482.417 -7764.4849 8482.9473 c-7764.4849 8483.4775 -7764.9155 8483.9072 -7765.4453 8483.9072 c-7765.8633 8483.9072 -7766.2148 8483.6396 -7766.3472 8483.2666 C-7766.4814 8483.2666 L-7766.4814 8483.6572 L-7766.4814 8486.4961 Lf0 1 1 0 k-7765.4453 8483.9072 m-7764.9155 8483.9072 -7764.4849 8483.4775 -7764.4849 8482.9473 c-7764.4849 8482.417 -7764.9155 8481.9873 -7765.4453 8481.9873 c-7765.8633 8481.9873 -7766.2148 8482.2559 -7766.3472 8482.6279 c-7766.3828 8482.7275 -7766.4058 8482.834 -7766.4058 8482.9473 c-7766.4058 8483.0596 -7766.3828 8483.165 -7766.3472 8483.2666 c-7766.2148 8483.6396 -7765.8633 8483.9072 -7765.4453 8483.9072 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7769.8833 8488.2354 m-7678.0479 8488.2354 L-7678.0479 8483.9561 L-7769.8833 8483.9561 L-7769.8833 8488.2354 Ln0 O0 0 0 1 k-7769.6631 8485.5557 m-7770 8485.6221 -7769.4814 8485.8115 -7769.8833 8485.6689 C-7769.8379 8485.5508 -7769.7725 8485.4619 -7769.6631 8485.5557 Cf-7679.1675 8485.7217 m-7680.2524 8486.4844 -7681.6816 8485.7139 -7682.8701 8486.2002 C-7683.0098 8486.2324 -7682.8345 8485.7822 -7683.1484 8485.8828 C-7684.3008 8486.4756 -7686.1162 8486.1221 -7687.5195 8485.665 C-7687.4346 8485.5469 L-7687.7017 8485.4619 -7688.0283 8485.8525 -7688.3115 8485.7979 C-7688.3135 8485.7197 -7688.2207 8485.6865 -7688.2861 8485.5791 C-7688.3574 8485.8154 -7688.7983 8485.6885 -7688.9185 8485.8643 C-7689.0303 8485.7725 -7689.0195 8485.585 -7689.1641 8485.4814 C-7689.3262 8485.75 L-7689.7769 8486.3896 -7690.4209 8485.7061 -7691.0361 8486.0361 C-7691.0063 8485.9736 -7690.9453 8485.9248 -7690.9941 8485.8643 C-7691.9814 8486.2529 -7693.2168 8486.1807 -7694.3208 8486.3232 C-7694.2769 8486.2285 -7694.2363 8486.0557 -7694.3008 8485.9482 C-7694.3555 8486.2314 -7694.6963 8486.3027 -7694.9922 8486.3584 C-7695.1255 8486.0674 -7695.4995 8486.624 -7695.8467 8486.4639 C-7695.8169 8486.3994 L-7696.0732 8486.7041 -7696.1973 8486.2236 -7696.4053 8486.5889 C-7696.5684 8486.3604 L-7696.6807 8486.7705 -7696.9395 8486.1475 -7697.1514 8486.3564 C-7697.1445 8486.4404 L-7697.3442 8486.54 -7697.4482 8486.334 -7697.6338 8486.4033 C-7697.6514 8486.3564 L-7698.0854 8486.4639 -7698.3379 8486.2354 -7698.3271 8486.5557 C-7698.4795 8486.2988 -7697.9063 8486.4385 -7698.1455 8486.0654 C-7699.5732 8486.3955 -7701.0459 8486.3311 -7702.4834 8486.3369 C-7702.6465 8486.208 -7702.7505 8486.1689 -7702.7871 8486.0479 C-7702.9307 8486.1123 -7703.3281 8486.1064 -7703.4585 8486.2705 C-7703.4102 8486.2637 -7703.5513 8486.1064 -7703.6274 8486.0908 C-7703.8887 8485.9697 -7703.9131 8486.4424 -7704.2002 8486.2988 C-7704.0859 8486.2139 -7704.0469 8486.1104 -7704.0854 8485.9912 C-7704.3301 8486.2412 -7704.6577 8486.2012 -7704.9473 8486.2822 C-7704.9023 8486.2285 -7704.8325 8486.1963 -7704.8433 8486.0957 C-7705.1602 8486.3789 -7705.4209 8486.0361 -7705.6982 8486.2148 C-7705.5947 8486.0303 L-7706.0415 8485.8057 -7705.7266 8486.417 -7706.1128 8486.2842 C-7706.02 8486.2256 -7706.0527 8486.1533 -7706.0361 8486.0781 C-7706.3965 8486.4141 -7706.9795 8486.3027 -7707.3389 8486.417 C-7707.3174 8486.3916 -7707.3232 8486.3408 Y-7707.7148 8486.3828 -7708.1245 8486.2783 -7708.5552 8486.4248 C-7708.7119 8486.3428 -7708.5039 8485.9736 -7708.9185 8486.042 C-7708.9033 8486.4131 -7709.6221 8486.1943 -7709.3779 8486.6143 C-7709.7319 8486.5537 -7710.2925 8486.4141 -7710.5283 8486.54 C-7710.3691 8486.3994 -7710.7007 8486.0869 -7710.4063 8486.0557 C-7710.6289 8485.8301 L-7710.5957 8485.6787 -7710.3999 8485.8818 -7710.4707 8485.6904 C-7710.6182 8485.7061 -7711.0479 8485.8525 -7711.1797 8485.792 C-7711.4531 8486.0195 -7711.7041 8486.4443 -7712.1465 8486.4912 C-7711.9385 8486.3467 -7712.2646 8486.082 -7712.1235 8486.0186 C-7712.7407 8486.7295 L-7712.8877 8486.7471 -7712.7725 8486.4365 -7712.9854 8486.5332 C-7712.9746 8486.6318 -7713.0674 8486.6924 -7713.1318 8486.7725 C-7713.1875 8486.7295 -7713.7441 8486.8643 -7713.8081 8486.499 C-7713.8735 8486.3564 -7713.5684 8486.4229 -7713.7314 8486.292 C-7714.0029 8486.2959 -7714.0151 8486.4209 -7714.2871 8486.4268 C-7714.2925 8486.3779 L-7714.4717 8486.3232 -7714.8213 8486.5332 -7714.6265 8486.7354 C-7714.5015 8486.7471 -7714.6738 8486.5156 -7714.4888 8486.6221 C-7714.6152 8486.834 -7714.9312 8486.8936 -7715.2031 8486.8975 C-7715.1104 8486.8389 -7715.1216 8486.7412 -7715.0845 8486.6377 C-7715.4497 8486.9248 -7715.8369 8487.0156 -7716.2451 8487.1357 C-7716.2515 8487.3096 -7716.0928 8486.8193 -7716.0327 8486.9111 C-7716.5557 8486.6699 -7717.1128 8487.2529 -7717.5479 8486.9004 C-7717.4766 8486.8701 -7717.5098 8487.1475 -7717.5146 8487.0986 C-7717.7666 8487.0771 -7717.7549 8486.8252 -7717.9189 8486.918 C-7717.9355 8486.7705 -7718.1255 8486.9658 -7718.2944 8487.0107 C-7718.3818 8487.1172 -7718.3384 8486.9385 -7718.1914 8486.9229 C-7718.4268 8487.0479 -7719.3691 8487.2744 -7719.9131 8487.0596 C-7719.9023 8487.1572 -7720.2471 8487.418 -7720.3721 8487.4072 C-7720.3232 8487.1787 L-7720.4375 8487.042 -7720.7422 8487.1982 -7720.7632 8487.0029 C-7721.0303 8487.2803 -7719.7344 8486.7666 -7720.0957 8486.9805 C-7720.1895 8486.79 -7720.5991 8487.3447 -7720.5215 8487.0332 C-7720.7725 8487.042 -7721.0161 8487.2988 -7721.2559 8487.085 C-7721.1865 8487.1221 -7721.0522 8486.7676 -7721.2549 8486.7842 C-7721.6123 8486.8252 -7721.3564 8486.8936 -7721.6465 8486.9697 C-7721.8281 8487.0635 L-7721.8398 8487.2861 -7722.1475 8487.0332 -7722.0146 8487.2822 C-7722.0586 8487.0986 -7722.5337 8487.3955 -7722.4971 8487.0264 C-7722.4473 8486.7354 L-7722.6016 8486.7568 -7722.7002 8487.042 -7722.8213 8487.1699 C-7722.8418 8487.1436 -7722.8823 8487.085 -7722.8745 8487.0381 C-7722.8994 8487.4834 -7723.2432 8487.001 -7723.4268 8487.3447 C-7723.7505 8487.1904 -7724.2495 8487.3311 -7724.4023 8487.0537 C-7724.6514 8487.1885 -7724.8784 8487.3486 -7725.1621 8487.2529 C-7725.1055 8487.2109 -7725.0283 8487.1982 -7725.0122 8487.1025 C-7725.1904 8486.9717 -7725.2344 8487.0889 -7725.3975 8487.1611 C-7725.3608 8487.0947 -7725.7539 8486.9004 -7725.9521 8486.7432 C-7726.1992 8486.876 -7726.1143 8487.1162 -7726.1392 8487.2627 C-7726.3652 8486.8232 -7726.8379 8487.5459 -7727.1211 8487.1475 C-7727.0352 8487.0869 -7726.7598 8486.9316 -7726.9658 8486.8213 C-7727.1919 8486.3828 -7727.4219 8487.1455 -7727.7861 8486.9346 C-7727.6968 8487.2988 L-7727.8594 8487.0732 -7728.2334 8487.5107 -7728.1963 8487.1396 C-7728.3184 8487.2705 -7728.6265 8487.0186 -7728.5859 8487.374 C-7729.1846 8487.0732 -7730.0425 8487.5557 -7730.4102 8486.918 C-7730.4961 8486.9775 -7730.7104 8486.917 -7730.6665 8487.0996 C-7730.5239 8487.2979 -7730.4673 8486.958 -7730.4141 8487.0928 C-7730.4912 8487.1035 -7730.5078 8487.2012 -7730.5161 8487.25 C-7730.7021 8487.1689 -7730.8486 8487.1436 -7730.6729 8486.8477 C-7731.0869 8486.6279 -7731.1001 8487.4521 -7731.6274 8487.3135 C-7731.6035 8487.166 -7731.6436 8487.1104 -7731.7979 8487.1338 C-7732.0903 8487.3857 L-7732.4312 8487.3271 -7732.2842 8487.0508 -7732.2925 8486.8018 C-7732.4746 8486.8447 -7732.6973 8486.833 -7732.7803 8487.0186 C-7733.0015 8486.7061 L-7732.8398 8486.9316 -7733.1514 8486.8564 -7733.2368 8486.917 C-7733.1514 8486.8564 L-7733.1846 8486.75 -7733.3955 8486.8154 -7733.5024 8486.8467 C-7733.4766 8487.001 -7733.2617 8487.0635 -7733.1445 8487.1084 C-7733.2373 8487.2178 -7733.3823 8487.1924 -7733.5059 8487.3213 C-7733.4648 8487.0771 -7733.8027 8487.1475 -7733.9473 8487.1221 C-7734.1133 8487.0693 -7734.1348 8487.3408 -7734.1831 8487.333 C-7734.1875 8487.2061 -7734.4541 8487.3115 -7734.3247 8487.1338 C-7734.2681 8487.0928 -7734.1953 8487.2568 -7734.1016 8487.1455 C-7734.2109 8487.0508 -7734.1982 8486.8301 -7734.4258 8486.9912 C-7734.5967 8487.1123 -7734.3818 8487.4736 -7734.7061 8487.3193 C-7734.6211 8487.2588 -7734.6055 8487.1611 -7734.5391 8487.0732 C-7734.8433 8486.9463 L-7734.8564 8487.1689 L-7734.8975 8487.1123 -7734.8691 8487.0928 -7734.8877 8487.0635 C-7734.9785 8487.2979 -7735.3521 8487.1357 -7735.4209 8487.3994 C-7735.5742 8487.4229 -7735.7441 8487.2451 -7735.8906 8487.2197 C-7735.8623 8487.2002 L-7736.0415 8487.0693 -7736.2793 8487.1553 -7736.4297 8487.3057 C-7736.4219 8487.2568 L-7736.5195 8487.2393 -7736.7505 8487.2744 -7736.8735 8487.4053 C-7737.1201 8487.2373 -7736.9561 8486.5645 -7737.2295 8486.8447 C-7737.48 8486.8525 -7737.6221 8487.2529 -7737.5215 8487.3955 C-7737.9717 8487.2451 -7738.4834 8487.6084 -7738.9009 8487.2627 C-7738.9658 8487.3525 -7738.9248 8487.4092 -7739.0586 8487.4619 C-7739.7197 8487.374 -7740.4551 8487.7256 -7740.9814 8487.2881 C-7740.79 8487.1943 -7740.9688 8487.0654 -7740.9727 8486.9385 C-7741.1309 8487.1377 -7741.1631 8486.7314 -7741.2197 8487.0732 C-7741.2041 8487.2744 -7741.2197 8487.3721 -7741.0337 8487.4531 C-7741.4282 8487.5615 -7742.0283 8487.5615 -7742.2471 8487.374 C-7742.1377 8487.4668 -7742.2227 8487.5283 -7742.3086 8487.5889 C-7742.2803 8487.2676 -7742.5713 8487.2197 -7742.7915 8487.333 C-7742.8223 8487.5283 L-7742.9658 8487.3271 L-7743.0503 8487.3896 -7743.0591 8487.7373 -7743.2773 8487.5498 C-7743.2891 8487.4736 -7743.3018 8487.3965 -7743.3418 8487.3408 C-7743.5693 8487.501 -7743.8906 8487.7725 -7744.1377 8487.6064 C-7744.3398 8487.3213 L-7744.4453 8487.3525 -7744.6235 8487.5244 -7744.4375 8487.6064 C-7744.8594 8487.4346 -7745.1309 8487.4131 -7745.2646 8487.166 C-7745.9912 8487.7676 -7747.0459 8487.792 -7747.8906 8487.749 C-7747.8652 8487.6025 L-7748.0923 8487.4658 -7747.9834 8487.8584 -7748.1416 8487.7568 C-7748.0684 8487.6172 -7748.3145 8487.4531 -7748.1362 8487.2822 C-7748.4609 8487.1279 -7748.5547 8487.5361 -7748.7656 8487.6025 C-7748.7979 8487.7949 -7748.5957 8487.4795 -7748.6367 8487.7236 C-7748.6729 8487.792 -7749.0859 8487.5732 -7749.1362 8487.8643 C-7749.2178 8487.75 -7749.1543 8487.5361 -7749.1104 8487.418 C-7749.3086 8487.5596 L-7749.5513 8487.2197 -7748.7559 8486.9521 -7749.0107 8486.5332 C-7749.1934 8486.5791 L-7749.3682 8486.2744 -7748.71 8486.2354 -7749.1689 8486.1309 C-7749.3682 8486.2744 -7749.5381 8486.6963 -7749.3608 8486.8252 C-7749.7754 8486.9053 -7749.5527 8487.5186 -7749.9985 8487.4941 C-7750.1201 8487.3232 -7749.6416 8487.4531 -7749.7275 8487.2139 C-7749.9375 8486.9795 -7750.1484 8487.3447 -7750.3354 8487.2627 C-7750.1279 8487.3721 -7750.3032 8487.666 -7750.4375 8487.7197 C-7750.6641 8487.582 -7750.29 8487.4443 -7750.6113 8487.4141 C-7750.6641 8487.582 -7750.9595 8487.708 -7750.7041 8487.8252 C-7750.8203 8488.2061 -7751.0381 8487.7197 -7751.2129 8488.0146 C-7751.3174 8487.7471 -7750.8823 8487.3955 -7751.2354 8487.2617 C-7751.1792 8487.5195 -7751.6704 8487.6123 -7751.4839 8487.9951 C-7751.6221 8487.9209 -7751.6367 8487.7178 -7751.5361 8487.5596 C-7751.7334 8487.4004 -7752.0151 8488.0303 -7752.0801 8487.5186 C-7752.1479 8487.7822 L-7752.21 8487.6963 -7752.2983 8487.6318 -7752.3994 8487.4893 C-7752.5732 8487.4844 -7752.96 8487.8467 -7752.9443 8487.4482 C-7753 8487.4893 -7753.3975 8487.4717 -7753.2441 8487.7471 C-7752.9971 8487.915 -7752.96 8487.5459 -7752.8223 8487.918 C-7752.9971 8487.6143 -7753.1787 8487.958 -7753.3213 8488.0596 C-7753.3447 8487.9053 L-7753.4297 8487.9658 -7753.6255 8487.9316 -7753.6787 8488.0986 C-7753.6133 8488.0107 -7753.6475 8487.9053 -7753.7148 8487.8682 C-7753.8042 8488.1025 L-7754.1494 8488.2197 -7753.8857 8487.6904 -7754.2217 8487.7588 C-7753.9663 8487.5771 L-7754.0225 8487.6162 -7754.1367 8487.3965 -7754.2979 8487.4697 C-7754.3604 8487.6836 -7754.4775 8487.9404 -7754.5313 8488.1064 C-7754.7207 8488.2002 -7754.6162 8487.8652 -7754.8027 8488.085 C-7754.5586 8487.8271 L-7754.5215 8487.7568 -7754.7231 8487.4736 -7754.9761 8487.4795 C-7755.1377 8487.5537 -7755.3887 8487.8623 -7755.1338 8487.9795 C-7755.2607 8487.9834 -7755.4385 8487.8525 -7755.3379 8487.6963 C-7755.6255 8487.7705 -7755.2998 8487.9268 -7755.5479 8488.0596 C-7755.6494 8487.917 -7755.9658 8487.7139 -7756.1563 8487.5068 C-7755.8975 8487.1484 L-7756.0693 8487.1455 L-7755.8467 8486.8584 -7756.1826 8486.9268 -7756.0566 8486.624 C-7756.1743 8486.5771 -7756.3169 8486.6797 -7756.4307 8486.7588 C-7756.0864 8487.2432 -7756.8159 8487.4209 -7756.7158 8487.8623 C-7757.1875 8487.9834 -7757.0107 8486.7881 -7757.5024 8487.4795 C-7757.4219 8487.5947 -7757.6533 8487.9307 -7757.3564 8487.8027 C-7757.6494 8487.7549 -7757.5557 8488.2461 -7757.9014 8488.0635 C-7757.6455 8487.8818 -7758.1763 8487.6162 -7757.8066 8487.3525 C-7757.8311 8487.499 -7757.6001 8487.4639 -7757.5435 8487.4229 C-7757.6641 8487.2529 -7757.5186 8486.9775 -7757.8184 8486.9775 C-7758.0015 8487.0195 -7758.2524 8487.0283 -7758.2158 8487.2588 C-7758.2085 8487.5117 -7757.9365 8487.2314 -7758.0537 8487.4873 C-7758.4185 8487.5752 -7758.4795 8487.1904 -7758.6304 8487.6396 C-7758.3999 8487.6035 -7758.3423 8487.8643 -7758.3467 8488.0381 C-7758.6143 8488.1436 L-7758.5625 8487.9756 L-7758.9922 8487.8545 -7758.6895 8488.2803 -7759.1055 8488.2354 C-7759.3008 8487.9033 L-7759.2017 8487.6172 -7758.6953 8488.0303 -7758.7695 8487.5645 C-7759.04 8487.5459 -7759.1299 8487.7822 -7759.3848 8487.6621 C-7759.3281 8487.6221 -7759.2505 8487.6104 -7759.1943 8487.5693 C-7759.2915 8487.5537 -7759.3877 8486.9365 -7759.7734 8487.2979 C-7759.9727 8487.4385 -7759.8262 8487.4639 -7759.8311 8487.6377 C-7760.2656 8487.6904 -7760.3955 8487.8682 -7760.6753 8487.8955 C-7760.6177 8487.5557 -7761.1699 8487.8623 -7760.8608 8487.5146 C-7760.7188 8487.7139 -7760.0903 8487.6943 -7759.9365 8487.3701 C-7760.0947 8486.9668 -7759.5952 8487.4268 -7759.5024 8487.0186 C-7759.8506 8487.0088 -7759.8335 8486.6123 -7759.8896 8486.3525 C-7759.9863 8486.334 -7760.0801 8486.4443 -7760.1377 8486.4844 C-7760.1787 8486.7295 -7760.0522 8486.7256 -7760.0449 8486.9775 C-7760.4336 8486.9111 -7760.8081 8487.0479 -7761.0225 8487.2861 C-7761.1523 8487.165 -7761.1113 8486.9209 -7760.9575 8486.8975 C-7761.4199 8486.9697 -7761.9141 8486.9365 -7762.3535 8486.8623 C-7762.0693 8487.2617 -7762.8433 8486.9561 -7762.6494 8487.2881 C-7762.4141 8487.3779 -7762.2119 8487.6621 -7762.3418 8487.8408 C-7762.4888 8487.8154 -7762.3369 8487.666 -7762.3984 8487.5811 C-7762.5859 8487.7988 -7762.6895 8487.2314 -7762.8735 8487.5752 C-7762.4512 8487.4463 -7762.7915 8487.0889 -7762.7139 8486.7764 C-7763.0186 8486.9521 -7762.7007 8486.5537 -7763.0024 8486.5537 C-7763.3057 8486.7275 -7763.6787 8486.8643 -7764.0161 8486.9316 C-7764.4399 8486.6357 -7765.0898 8486.9268 -7765.4683 8486.9385 C-7765.6665 8486.7803 -7765.5322 8486.4268 -7765.7471 8486.3652 C-7765.9995 8486.3721 -7765.5601 8486.7471 -7765.9336 8486.585 C-7765.8975 8486.5146 L-7766.0107 8486.5967 -7766.5825 8486.2744 -7766.6929 8486.7822 C-7766.5776 8486.3994 L-7766.6475 8486.3643 -7766.7119 8486.4521 -7766.7695 8486.4932 C-7766.7725 8486.3682 -7766.8535 8486.2549 -7766.7402 8486.1729 C-7766.9707 8485.9092 -7767.2241 8486.2148 -7767.4746 8486.2256 C-7767.3135 8486.4521 L-7767.7422 8486.6299 -7768.0293 8486.4053 -7768.4443 8486.4844 C-7768.4316 8486.2627 L-7768.6787 8486.3955 L-7768.6182 8486.1807 -7768.8447 8486.042 -7768.9751 8486.2217 C-7768.3335 8485.6787 L-7768.1553 8485.8096 -7768.5283 8485.9463 -7768.4165 8486.165 C-7768.3213 8486.3564 -7767.9375 8486.2959 -7767.8755 8486.082 C-7768.0225 8486.0576 -7768.0293 8486.1064 -7768.1436 8486.1865 C-7768.1919 8485.8779 -7767.9688 8485.8896 -7767.8584 8485.6836 C-7767.9355 8485.6963 -7768.0449 8485.6025 -7768.0615 8485.7002 C-7767.9102 8485.5498 -7767.7578 8485.5264 -7767.5059 8485.5186 C-7767.6763 8485.6396 -7767.4131 8485.71 -7767.4775 8485.7979 C-7767.4575 8485.5264 -7767.2168 8485.4424 -7766.9053 8485.5186 C-7766.6831 8485.833 -7766.3208 8485.3164 -7765.96 8485.4033 C-7766.1064 8485.6787 -7766.2935 8485.8994 -7766.5127 8486.0107 C-7766.2861 8486.1484 -7766.2607 8486.0029 -7766.0337 8486.1416 C-7765.9238 8485.9365 -7765.8457 8485.6221 -7765.5503 8485.4971 C-7765.5342 8485.7002 L-7765.2666 8485.5967 -7765.2666 8485.2959 -7764.9258 8485.3525 C-7764.3418 8485.4521 -7763.7407 8485.4521 -7763.2949 8485.4775 C-7763.2783 8485.6797 L-7763.0303 8485.2461 -7762.4521 8485.5195 -7762.1182 8485.3271 C-7761.5503 8485.5225 -7760.8848 8485.1338 -7760.5938 8485.4834 C-7759.5913 8485.3271 -7758.7148 8485.1748 -7757.6768 8485.249 C-7757.8516 8485.5439 L-7757.6655 8485.3271 -7757.7305 8485.7139 -7757.5479 8485.6699 C-7757.7578 8485.4346 -7757.2949 8485.3643 -7757.1665 8485.1836 C-7756.7041 8485.4131 -7756.1104 8485.1631 -7755.7007 8484.9561 C-7755.6846 8485.1592 L-7755.2705 8484.7783 -7754.7759 8485.1123 -7754.2598 8485.1748 C-7754.2007 8485.2588 -7754.1074 8485.4492 -7753.9536 8485.4268 C-7753.6738 8485.0986 -7753.5273 8485.1221 -7753.1167 8484.917 C-7752.8169 8484.917 -7752.3301 8484.998 -7752.0254 8485.126 C-7750.8975 8484.665 -7749.7456 8484.96 -7748.5732 8484.6826 C-7748.4888 8484.9209 L-7747.3521 8484.4111 -7745.9541 8484.874 -7744.9839 8484.6123 C-7745.0776 8485.0195 L-7744.7734 8485.1455 -7744.3843 8484.9131 -7744.4619 8484.624 C-7744.1567 8484.749 -7743.7007 8484.4268 -7743.5068 8484.7617 C-7743.1953 8484.8369 -7743.1255 8484.5732 -7742.8662 8484.5186 C-7742.2422 8484.6729 -7742.0107 8484.6377 -7741.4224 8484.5615 C-7741.5684 8484.5361 L-7741.6328 8484.626 -7741.6387 8484.7988 -7741.4922 8484.8252 C-7741.2725 8484.7119 -7740.6846 8484.9346 -7740.9033 8484.4482 C-7740.2754 8484.7295 -7739.4385 8484.2197 -7738.8271 8484.5986 C-7738.8789 8484.4658 -7738.7246 8484.4404 -7738.6602 8484.3506 C-7738.1089 8484.3447 -7737.5293 8484.6162 -7737.0898 8484.3896 C-7737.0024 8484.4561 -7737.2295 8484.6162 -7737.0049 8484.6299 C-7736.8721 8484.5791 -7737.0024 8484.4561 -7736.8384 8484.3818 C-7735.9453 8484.1338 -7735.0303 8484.6377 -7734.2188 8484.5732 C-7732.7754 8484.3164 -7731.2695 8484.4463 -7729.8867 8484.4033 C-7729.9023 8484.501 L-7729.4395 8484.1279 -7728.8159 8484.8828 -7728.4463 8484.3213 C-7728.3369 8484.4141 -7728.0283 8484.3652 -7728.1094 8484.5537 C-7727.7407 8484.29 -7727.0771 8484.8018 -7726.5439 8484.4668 C-7726.5928 8484.458 -7726.6211 8484.4775 -7726.6777 8484.5195 C-7726.1392 8484.7354 -7725.6641 8484.4404 -7725.0957 8484.6357 C-7725.1533 8484.6777 -7725.2583 8484.708 -7725.2754 8484.8057 C-7725.0557 8484.9932 -7724.7549 8484.3936 -7724.6348 8484.8643 C-7724.5088 8484.8604 -7724.5449 8484.6279 -7724.6221 8484.6416 C-7723.3779 8484.8252 -7722.0498 8484.5244 -7720.7549 8484.417 C-7719.8271 8484.6982 -7720.6982 8485.21 -7719.9663 8484.8584 C-7719.9063 8484.9492 -7719.9229 8484.6787 -7719.9131 8484.7764 C-7719.6299 8484.6445 -7719.4717 8485.3018 -7719.2754 8485.0557 C-7719.3564 8484.7666 -7719.1445 8484.8936 -7719.1387 8484.7178 C-7718.5713 8484.9053 -7718.4575 8485.166 -7718.0098 8484.9463 C-7718.0435 8485.0986 L-7717.5186 8484.6689 -7716.9102 8484.8994 -7716.4673 8484.4033 C-7713.5728 8484.3135 -7710.7983 8484.0381 -7707.9761 8483.9805 C-7705.1865 8484.0752 -7702.4551 8483.8525 -7699.6221 8484.1162 C-7698.9585 8484.5156 -7698.9087 8484.5049 -7698.1797 8484.3428 C-7698.2095 8484.4072 -7698.2549 8484.4229 -7698.2061 8484.4834 C-7698.1699 8484.1553 -7697.6929 8484.4521 -7697.6235 8484.1396 C-7696.5762 8484.2002 -7695.6113 8484.1104 -7694.5337 8484.1084 C-7694.7041 8484.1436 -7694.7896 8484.4111 -7694.5869 8484.3896 C-7694.3755 8484.1807 L-7694.3408 8484.2725 L-7694.2021 8484.2236 -7694.0513 8484.0615 -7694.1943 8483.9561 C-7691.4873 8483.6729 -7688.8242 8484.3311 -7686.1729 8484.25 C-7685.5435 8484.3867 -7684.6475 8484.2617 -7683.9629 8484.1943 C-7681.9355 8484.6318 -7680.1079 8484.9844 -7678.0479 8484.6787 C-7678.3169 8485.5264 -7679.1675 8485.7217 Vf-7769.2578 8485.5225 m-7769.1855 8485.6865 -7768.9497 8485.7764 -7769.1377 8485.9951 C-7769.1611 8485.8408 -7769.2822 8485.6689 -7769.2578 8485.5225 Cf-7762.9619 8487.21 m-7762.9536 8487.1611 -7762.8721 8487.2764 -7762.8521 8487.3027 C-7762.9297 8487.3154 -7763.0024 8487.4531 -7763.0645 8487.3682 C-7762.9854 8487.3564 -7762.9976 8487.2783 -7762.9619 8487.21 Cf-7761.3521 8487.3076 m-7761.3765 8487.4531 -7761.7207 8487.5693 -7761.9238 8487.5869 C-7761.3521 8487.3076 Lf-7759.8521 8487.9092 m-7759.7227 8488.0322 -7759.7583 8488.0996 -7759.9326 8488.0957 C-7759.9453 8488.0186 -7759.8877 8487.9795 -7759.8521 8487.9092 Cf-7759.7456 8487.5771 m-7759.6211 8487.5732 -7759.5591 8487.6592 -7759.4985 8487.7432 C-7759.5029 8487.6172 -7759.7871 8487.8213 -7759.7456 8487.5771 Cf-7756.4893 8488.001 m-7756.4111 8487.9893 -7756.2417 8487.8682 -7756.1689 8488.0303 C-7756.2505 8487.917 -7756.5498 8488.2148 -7756.4893 8488.001 Cf-7754.9761 8487.7803 m-7754.9272 8487.79 -7754.9072 8487.8164 -7754.8506 8487.7764 C-7754.7607 8487.8428 -7754.8555 8487.9492 -7754.9312 8487.9629 C-7754.9761 8487.7803 Lf-7727.4287 8487.1943 m-7727.5923 8487.2666 L-7727.5684 8487.1221 L-7727.4287 8487.1943 Lf-7715.3574 8487.1865 m-7715.1943 8487.0947 -7715.2441 8487.3232 -7715.2168 8487.3447 C-7715.3643 8487.3604 -7715.1621 8487.165 -7715.3574 8487.1865 Cf-7708.8486 8486.458 m-7708.8984 8486.4619 L-7708.8818 8486.1631 L-7708.8486 8486.458 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7743.9727 8488.2803 m-7743.9727 8462.252 L-7770 8462.252 L-7770 8488.2803 L-7743.9727 8488.2803 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-7770 8470.9268 m-7743.9727 8470.9268 lS0.64 0.650477 0.701045 0.510735 K-7770 8479.6045 m-7743.9727 8479.6045 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-7770 8475.2656 m-7743.9727 8475.2656 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7748.5742 8475.292 m-7748.3442 8475.0205 -7748.6914 8474.7344 -7749 8474.5234 c-7749.1118 8474.4463 -7749.5215 8474.6592 -7749.7466 8474.4932 c-7750.0439 8474.2754 -7750.1826 8474.1885 -7750.4824 8474.1943 c-7750.6455 8474.1982 -7751.0435 8474.3281 -7751.1895 8474.3584 c-7751.5679 8474.4346 -7751.8022 8474.6318 -7752.3672 8474.5352 c-7752.7344 8474.4717 -7752.8286 8474.3809 -7752.9233 8474.4287 c-7753.1118 8474.5703 -7753.2202 8474.7939 -7753.4258 8474.8428 c-7753.9575 8474.9697 -7754.3535 8475.0137 -7754.8818 8475.0029 c-7755.3047 8474.9932 -7756.4185 8475.0615 -7757.2866 8474.9619 c-7757.6226 8474.9219 -7757.6025 8474.4971 -7757.7695 8474.4932 c-7757.8618 8474.4912 -7757.7646 8474.8066 -7757.8306 8474.8271 c-7758.1694 8474.9336 -7758.4702 8473.7832 -7758.6943 8473.8525 c-7758.8047 8473.8877 -7758.5562 8474.4336 -7758.6729 8474.4619 c-7758.8975 8474.5176 -7759.2178 8473.499 -7759.4321 8473.5615 c-7759.5635 8473.5986 -7759.2886 8474.0186 -7759.4375 8474.0869 c-7759.6655 8474.1914 -7759.9087 8473.3154 -7760.1064 8473.4141 C-7760.1543 8473.4619 -7759.7295 8474.2178 -7760.1685 8474.1592 c-7760.2871 8474.1416 -7760.5054 8473.5938 -7760.5801 8473.6201 c-7760.6919 8473.6602 -7760.3535 8474.082 -7760.4897 8474.208 C-7760.7681 8474.4346 -7761.3711 8473.4434 -7761.4575 8473.5146 c-7761.5791 8473.6162 -7761.1279 8474.3779 -7761.2695 8474.4463 C-7761.4497 8474.71 -7762.0142 8473.833 -7762.0889 8473.8818 c-7762.1777 8473.9404 -7761.9058 8474.3184 -7761.8799 8474.5137 c-7761.8545 8474.708 -7761.9966 8474.8418 -7762.2144 8474.79 c-7762.4736 8474.7275 -7762.8696 8473.9219 -7762.9727 8474.0156 C-7763.0791 8474.0713 -7762.8682 8474.3584 -7762.7954 8474.5928 c-7762.7583 8474.708 -7762.8882 8474.8818 -7763.0298 8474.8818 c-7763.3135 8474.9297 -7763.6255 8474.2783 -7763.7065 8474.3828 c-7763.7524 8474.4424 -7763.5898 8474.7705 -7763.7295 8474.8682 c-7763.8994 8474.9863 -7764.3115 8474.5186 -7764.4521 8474.5732 C-7764.5361 8474.6221 -7764.4126 8474.877 -7764.4927 8474.9336 c-7764.7295 8475.0996 -7765.0039 8474.7012 -7765.0513 8474.749 C-7765.1167 8474.7715 -7765.1201 8474.8164 -7765.2793 8474.9209 c-7765.4736 8475.0479 -7765.5254 8475.1289 -7765.5425 8475.2451 c-7765.5654 8475.3633 -7765.3135 8475.6553 -7765.1655 8475.6299 c-7764.8223 8475.5703 -7764.8662 8476.1299 -7764.6328 8475.9961 c-7764.5679 8475.96 -7764.6592 8475.5391 -7764.4199 8475.5459 c-7764.0488 8475.5586 -7763.9858 8476.1016 -7763.7817 8476.0908 c-7763.6406 8476.084 -7763.8521 8475.4639 -7763.6328 8475.541 c-7763.4751 8475.5967 -7763.0063 8476.582 -7762.9795 8476.4902 c-7762.8975 8476.2227 -7763.0703 8475.6787 -7762.9409 8475.6885 c-7762.7568 8475.7031 -7762.5078 8476.5977 -7762.2544 8476.7178 c-7762.1826 8476.7529 -7762.3774 8475.8809 -7762.1958 8475.877 C-7762.0898 8475.9268 -7761.7578 8476.7295 -7761.6274 8476.7783 C-7761.5591 8476.7627 -7761.5879 8476.4053 -7761.5176 8476.3848 c-7761.4688 8476.3701 -7761.2817 8476.8457 -7761.21 8476.8037 c-7761.1055 8476.7432 -7761.2471 8476.2725 -7761.0889 8476.2031 c-7760.9175 8476.1289 -7760.4878 8477.1729 -7760.3486 8477.0781 c-7760.2769 8477.0303 -7760.3574 8476.4902 -7760.21 8476.5264 c-7760.0718 8476.5586 -7759.9414 8476.8945 -7759.8081 8476.9229 c-7759.7295 8476.9385 -7759.7935 8476.4717 -7759.7495 8476.4541 c-7759.5889 8476.3955 -7759.2329 8476.9521 -7759.0688 8476.8037 c-7758.8584 8476.6152 -7758.9395 8476.25 -7758.8345 8476.2627 c-7758.6274 8476.2861 -7758.4912 8476.5234 -7758.4146 8476.4639 c-7758.2642 8476.3486 -7758.3281 8476.0596 -7758.0527 8475.9727 c-7757.8975 8475.9229 -7757.7935 8476.2148 -7757.7495 8476.2109 c-7757.6738 8476.208 -7757.6782 8476.1104 -7757.6665 8476.0049 c-7757.6328 8475.7412 -7757.6064 8475.6797 -7757.4878 8475.6572 c-7757.0854 8475.6338 -7756.5625 8475.5645 -7756.1807 8475.5557 c-7755.6274 8475.541 -7754.2607 8475.5176 -7754.1182 8475.5176 c-7754 8475.4932 -7753.7432 8475.6748 -7753.6689 8475.7412 c-7753.4678 8475.9258 -7753.2998 8476.1396 -7752.9858 8476.4004 c-7752.8906 8476.4814 -7752.8081 8476.4609 -7752.7378 8476.4365 c-7752.5249 8476.3652 -7752.4585 8476.3135 -7752.2202 8476.2822 c-7751.9175 8476.2393 -7751.4272 8476.3291 -7751.1245 8476.4229 c-7750.6035 8476.582 -7750.5264 8476.6045 -7750.0977 8476.5557 c-7749.6992 8476.5098 -7749.0586 8476.4385 -7749.0479 8476.0908 c-7749.0415 8475.876 -7748.9414 8475.7236 -7748.5742 8475.292 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7743.9722 8488.2803 m-7743.9722 8462.2529 L-7770 8462.2529 L-7770 8488.2803 L-7743.9722 8488.2803 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7752.6455 8475.2695 m-7743.9736 8475.2695 lS-7756.9839 8488.2803 m-7756.9839 8479.6045 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7752.7202 8470.9307 m-7743.9727 8470.9307 lS-7761.3232 8488.2793 m-7761.3232 8478.9258 lS0.64 0.650477 0.701045 0.510735 K-7752.6504 8488.2793 m-7752.6504 8485.8672 l-7749.9937 8485.6436 -7748.3096 8483.9404 v-7746.6064 8482.2139 -7746.3774 8479.6084 y-7743.9727 8479.6084 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-7760.8418 8472.4658 m-7760.8418 8472.5303 -7760.8218 8472.5713 -7760.7783 8472.5713 c-7760.6943 8472.5713 -7760.4634 8472.2344 -7760.3994 8472.2344 c-7760.3154 8472.2344 -7760.2729 8472.2764 -7760.2729 8472.3818 c-7760.2729 8472.4658 -7760.5264 8473.373 y-7760.5264 8473.4141 -7760.5264 8473.4141 -7760.5049 8473.4141 c-7760.4414 8473.4141 -7760.0615 8472.8672 -7759.9351 8472.8672 c-7759.9146 8472.8672 -7759.8936 8472.8877 -7759.8936 8472.9092 c-7760.1675 8473.8154 -7760.1675 8474.0059 v-7760.1675 8474.0693 -7760.1675 8474.0908 -7760.1465 8474.0908 c-7760.1055 8474.0908 -7759.6826 8473.5205 -7759.5562 8473.5205 c-7759.5352 8473.5205 -7759.5137 8473.541 -7759.5137 8473.5625 c-7759.5137 8473.626 -7759.7666 8474.3643 -7759.7666 8474.5322 c-7759.7666 8474.5752 -7759.7666 8474.5752 -7759.7446 8474.5752 c-7759.6826 8474.5752 -7759.4722 8474.3643 -7759.4297 8474.3643 c-7759.4082 8474.3643 -7759.3882 8474.3857 -7759.3882 8474.4063 c-7759.3882 8474.4268 -7759.4927 8474.7861 -7759.4927 8474.8701 c-7759.4927 8474.8916 -7759.4927 8474.8916 -7759.4722 8474.8916 c-7759.4297 8474.8916 -7759.0918 8474.5322 -7759.0078 8474.5322 c-7758.9658 8474.5322 -7758.9233 8474.5752 -7758.9233 8474.6592 c-7758.9233 8474.8076 -7759.1138 8475.5244 -7759.1138 8475.5664 c-7759.1138 8475.6504 -7759.0918 8475.6924 -7759.0498 8475.6924 c-7758.9658 8475.6924 -7758.7119 8475.376 -7758.6494 8475.376 c-7758.5854 8475.376 -7758.5439 8475.3965 -7758.5439 8475.4609 c-7758.5854 8475.8818 L-7758.5854 8475.9463 -7758.5854 8475.9658 -7758.5654 8475.9658 c-7758.5225 8475.9658 -7758.2915 8475.6719 -7758.2065 8475.6719 c-7758.1006 8475.6719 -7758.1006 8476.1572 -7758.1006 8476.2197 c-7758.1006 8476.3252 -7758.0166 8476.4092 -7757.8896 8476.4092 c-7757.8057 8476.4092 -7757.4678 8476.1777 -7757.4473 8476.1777 c-7757.3623 8476.1777 -7757.3198 8476.6201 -7757.2568 8476.6201 c-7757.1943 8476.6201 -7756.9199 8476.4932 -7756.8564 8476.4932 c-7756.6455 8476.4932 -7756.6035 8476.5791 -7756.6035 8476.7471 c-7756.6255 8476.8945 L-7756.6255 8476.9365 -7756.6035 8476.9365 -7756.5835 8476.9365 c-7756.4985 8476.9365 -7756.2241 8476.6621 -7756.1392 8476.6621 c-7755.9287 8476.6621 -7753.8198 8478.7295 -7753.5454 8479.0029 c-7753.3984 8479.1709 -7753.3984 8479.4668 -7753.3984 8479.5938 c-7753.3984 8480.458 -7753.3984 8480.542 -7753.2295 8480.626 c-7752.5977 8480.8799 -7752.5127 8481.0273 -7751.7334 8482.3135 c-7751.6479 8482.4609 -7750.7407 8483.0732 -7750.5942 8483.0732 c-7750.4878 8483.0732 -7750.1094 8482.8193 -7750.0239 8482.8193 c-7749.9194 8482.8193 -7749.8135 8482.8828 -7749.8135 8483.0508 c-7749.8135 8483.4941 -7750.3408 8484.001 -7750.9312 8484.001 c-7751.7534 8484.001 -7752.0913 8483.3037 -7752.1338 8482.9053 c-7752.1543 8482.7568 -7752.2393 8482.6719 -7752.3447 8482.6719 c-7752.3862 8482.6719 -7752.4287 8482.6924 -7752.4702 8482.7568 c-7752.9561 8483.5576 -7753.9473 8484.001 -7754.7065 8484.001 c-7755.7393 8484.001 -7756.8774 8483.3682 -7757.3418 8483.0947 c-7757.7842 8482.8418 -7758.4814 8482.6719 -7758.8809 8482.6719 c-7759.3242 8482.6719 -7759.3662 8482.8193 -7759.3662 8483.0732 c-7759.3662 8483.2207 -7758.9023 8483.6621 -7758.9023 8483.79 c-7758.9023 8483.916 -7759.0498 8484.001 -7759.4082 8484.001 c-7759.8936 8484.001 -7760.5679 8483.2832 -7760.5679 8482.5039 c-7760.5679 8481.8916 -7759.7666 8481.3652 -7759.3022 8481.3652 c-7758.3755 8481.3652 -7758.0942 8481.7236 -7757.5264 8482.1875 c-7757.4414 8482.25 -7757.3774 8482.2725 -7757.3359 8482.2725 c-7757.1895 8482.2725 -7757.1895 8481.1748 -7757.1895 8481.0498 c-7757.1895 8480.9004 -7757.2729 8480.8379 -7757.3774 8480.8379 c-7759.7822 8480.8379 -7764.6592 8479.6143 -7766.3672 8473.458 c-7766.4297 8473.2461 -7766.5361 8473.1416 -7766.6406 8473.1416 c-7766.7881 8473.1416 -7767.7793 8473.9844 -7767.7793 8475.5664 c-7767.7793 8477.4004 -7766.5767 8478.3701 -7765.9873 8478.3701 c-7765.8398 8478.3701 -7765.6494 8478.3496 -7765.6494 8478.2012 c-7765.6494 8478.1387 -7765.6929 8478.0752 -7765.7759 8477.9697 c-7766.1143 8477.6338 -7766.3672 8477 -7766.3672 8476.6836 c-7766.3672 8476.4717 -7766.2607 8476.3037 -7766.1143 8476.3037 c-7765.9033 8476.3037 -7765.5654 8477.2529 -7765.46 8477.4004 c-7765.3335 8477.6113 -7764.9546 8477.9912 -7764.2378 8478.5186 c-7763.4995 8479.0439 -7762.0654 8480.3525 -7762.0654 8481.6172 c-7762.0654 8482.9893 -7763.1191 8483.8955 -7763.9209 8483.8955 c-7764.7007 8483.8955 -7765.6714 8483.3682 -7766.0713 8482.8828 c-7766.7041 8482.1455 -7767.3154 8481.5752 -7767.8218 8481.5752 c-7768.1592 8481.5752 -7768.3066 8481.7861 -7768.3066 8481.9971 c-7768.3066 8482.334 -7768.0537 8482.5664 -7767.5479 8482.6084 c-7766.9575 8482.6514 -7766.8936 8483.0732 -7766.8936 8483.4092 c-7766.8936 8483.6836 -7767.4209 8484.001 -7767.8433 8484.001 c-7768.4751 8484.001 -7769.2974 8483.3037 -7769.2974 8481.4707 c-7769.2974 8479.9727 -7768.0537 8479.5098 -7767.5679 8479.5098 c-7767.1265 8479.5098 -7766.4722 8479.5938 -7766.0928 8479.9307 c-7764.8066 8481.1338 -7764.1318 8481.3428 -7763.5835 8481.3428 c-7763.3721 8481.3428 -7763.2881 8481.3428 -7763.2881 8481.4912 c-7763.2881 8481.8076 -7764.0474 8481.9971 -7764.1318 8482.0186 c-7764.3423 8482.0811 -7764.5103 8482.3135 -7764.5103 8482.5244 c-7764.5103 8483.0098 -7764.2378 8483.0303 -7763.8774 8483.0303 c-7763.5215 8483.0303 -7762.8042 8482.6719 -7762.8042 8481.4707 c-7762.8042 8480.4795 -7763.9424 8479.3193 -7764.4058 8479.0879 c-7764.7007 8478.918 -7765.5874 8478.9404 -7765.9458 8478.8975 c-7766.6406 8478.8125 -7768.4121 8477.8652 -7768.4121 8475.376 c-7768.4336 8473.9629 -7767.1265 8472.6357 -7766.8511 8472.4463 c-7766.6826 8472.3389 -7766.5986 8472.2129 -7766.5986 8472.0439 c-7766.5986 8471.833 -7766.6626 8468.9023 -7766.9995 8468.9023 c-7767.4424 8468.9023 -7767.5054 8468.9023 -7767.5054 8469.0938 c-7767.21 8470.1885 -7767.21 8470.4209 v-7767.21 8470.7373 -7767.4424 8472.2129 -7768.3066 8472.2129 c-7768.5806 8472.2129 -7769.0449 8471.9805 -7769.0449 8471.665 c-7769.0449 8471.3701 -7768.3486 8470.168 -7768.3486 8469.8936 c-7768.3486 8469.4082 -7768.3921 8469.3877 -7769.0654 8468.7764 c-7769.2559 8468.6289 -7769.3193 8468.5029 -7769.3193 8468.3115 c-7769.3193 8468.1436 -7769.2134 8468.0156 -7769.0449 8468.0156 c-7768.8975 8468.0156 -7768.3281 8468.292 -7768.2017 8468.3115 c-7768.0752 8468.3115 -7767.8433 8468.333 -7767.6538 8468.333 c-7767.2734 8468.333 -7767.0845 8468.2061 -7767.0845 8468.0801 c-7767.0845 8467.8477 -7767.0845 8467.1738 -7767.9263 8465.7178 c-7768.1167 8465.3809 -7769.2974 8464.0527 -7769.2974 8463.7148 c-7769.2974 8463.5459 -7769.2134 8463.5264 -7769.1089 8463.5264 c-7768.9185 8463.5264 -7768.4966 8463.9473 -7768.3706 8464.0947 c-7767.1265 8465.4229 -7766.3042 8466.8564 -7765.9238 8468.1221 c-7765.8398 8468.4385 -7765.7344 8468.3545 -7765.5654 8468.376 c-7763.4155 8468.8818 -7761.3271 8471.3906 -7761.3271 8471.4121 c-7761.4326 8471.6855 -7761.4326 8471.749 v-7761.4326 8471.876 -7761.3271 8471.8975 -7761.3057 8471.8975 c-7761.2432 8471.8975 -7761.0527 8471.6855 -7761.0103 8471.6855 c-7760.9058 8471.6855 -7760.7783 8471.7705 -7760.7783 8471.918 C-7760.8418 8472.4658 lf0 D-7764.1104 8470.9697 m-7763.5215 8470.9697 -7763.0986 8471.0752 -7762.6982 8471.3486 c-7762.6553 8471.3701 -7762.6138 8471.3906 -7762.5928 8471.3906 c-7762.5498 8471.3906 -7762.5498 8471.3701 -7762.5498 8471.3271 c-7762.5498 8470.9063 -7764.4272 8468.9463 -7765.5654 8468.9463 c-7765.6289 8468.9463 -7765.6714 8468.9873 -7765.6714 8469.0498 c-7765.6714 8469.2402 -7765.5874 8471.2432 -7765.2495 8471.2432 c-7765.1865 8471.2432 -7765.1016 8471.2217 -7765.0386 8471.1807 c-7764.7007 8471.0322 -7764.4902 8470.9697 -7764.1104 8470.9697 cf-7763.5835 8473.7314 m-7763.5835 8473.3096 -7763.5625 8472.8457 -7762.8662 8472.8457 c-7762.2334 8472.8457 -7761.6431 8473.5 -7761.4961 8473.6475 c-7761.4326 8473.6895 -7761.3906 8473.71 -7761.3486 8473.71 c-7761.3271 8473.71 -7761.2847 8473.668 -7761.2847 8473.626 c-7761.2847 8473.1826 -7762.6553 8471.5176 -7764.0049 8471.5176 c-7764.2578 8471.5176 -7765.2705 8471.6855 -7765.2705 8472.2344 c-7765.2705 8472.4873 -7764.8906 8473.8584 -7764.2793 8474.9336 c-7762.9087 8477.4219 -7758.7119 8478.9805 -7756.8145 8478.9805 c-7755.9072 8479.0029 -7755.6118 8478.6865 -7755.4863 8478.665 c-7755.4648 8478.665 -7755.4438 8478.6445 -7755.4233 8478.6445 c-7755.3174 8478.6445 -7755.1904 8478.708 -7755.1904 8478.8555 c-7755.1904 8478.877 -7755.2119 8478.877 v-7755.3594 8480.0146 -7755.4014 8480.416 -7755.4014 8481.6797 c-7755.4014 8483.0732 -7755.4014 8483.1992 -7754.4321 8483.1992 c-7753.1455 8483.1992 -7752.8506 8482.124 -7752.8506 8481.8916 c-7752.8506 8481.4707 -7753.4399 8481.1748 -7753.5889 8481.1748 c-7753.7358 8481.1748 -7753.9058 8481.2822 -7753.9058 8481.4707 c-7753.9058 8481.7656 -7753.9473 8481.9131 -7754.2207 8481.9131 c-7754.4951 8481.9131 -7754.4951 8481.5547 -7754.4951 8481.4482 c-7754.4951 8481.1963 -7754.3896 8480.9434 -7754.1782 8480.8164 c-7753.7998 8480.5635 -7753.7998 8480.1631 -7753.7998 8479.9521 c-7753.7998 8479.8467 -7753.7998 8479.7197 -7753.8198 8479.6143 c-7753.8418 8479.4463 -7755.7817 8477.4004 -7756.0977 8477.4004 c-7756.2446 8477.4004 -7756.5615 8477.5469 -7757.4258 8477.5469 c-7759.5767 8477.5469 -7760.5474 8475.8193 -7760.7378 8475.292 c-7760.9897 8474.5752 -7761.7915 8474.2793 -7762.0225 8474.2793 c-7762.2129 8474.2793 -7762.2129 8474.3223 -7762.2129 8474.7227 c-7762.2129 8474.8076 -7762.4238 8475.1436 y-7762.4238 8475.334 -7761.3906 8475.5869 -7761.3906 8475.7764 c-7761.3906 8475.9463 -7761.5801 8475.9658 -7761.7271 8475.9658 c-7761.8115 8475.9658 -7762.8882 8475.9658 -7763.3306 8475.1436 c-7763.5415 8474.7432 -7763.5835 8474.1748 -7763.5835 8473.7314 cf1 D-7759.4927 8471.4756 m-7759.4927 8471.4316 -7759.5137 8471.4121 -7759.5352 8471.4121 c-7759.5986 8471.4121 -7759.7666 8471.749 -7759.8506 8471.749 c-7759.9146 8471.749 -7759.9995 8471.665 -7760.0415 8471.5586 c-7760.0615 8471.4756 -7760.1255 8471.0107 -7760.21 8471.0107 c-7760.2524 8471.0107 -7760.4209 8471.2432 -7760.4634 8471.2432 c-7760.6104 8471.2432 -7760.7158 8471.0107 -7760.7158 8470.8018 c-7760.7158 8470.6953 -7760.7783 8470.6953 -7760.9263 8470.6953 c-7761.5166 8470.6953 -7763.1406 8468.5234 -7763.5625 8466.7725 c-7763.6055 8466.6045 -7763.5835 8466.457 -7763.8994 8466.3506 c-7766.0713 8465.6143 -7768.5176 8463.4619 -7768.5176 8463.3359 c-7768.5176 8463.1885 -7768.4336 8463.1045 -7768.3066 8463.1045 c-7768.2432 8463.1045 -7768.1592 8463.1045 -7767.6538 8463.4404 c-7766.7681 8464.0313 -7764.7217 8465.3184 -7763.8994 8465.3184 c-7763.6265 8465.3184 -7763.6055 8464.96 -7763.6055 8464.7061 c-7763.6055 8464.5156 -7763.6265 8464.2842 -7763.6265 8464.1377 c-7763.6465 8463.8633 -7763.9634 8463.5459 -7763.9634 8463.3779 c-7763.9634 8463.2305 -7763.8154 8463.125 -7763.6465 8463.125 c-7763.4575 8463.125 -7763.3306 8463.1465 -7763.1606 8463.3359 c-7762.8662 8463.6729 -7762.7402 8463.8213 -7762.4238 8463.8213 c-7762.1914 8463.8213 -7761.1377 8463.1045 -7760.8838 8463.1045 c-7760.5679 8463.1045 -7760.1895 8463.5889 -7760.1895 8463.8848 c-7760.1895 8464.6221 -7761.0942 8465.2129 -7761.6431 8465.2129 c-7762.0225 8465.2129 -7762.4438 8465.0869 -7762.6353 8464.8545 c-7762.6982 8464.79 -7762.7607 8464.749 -7762.8242 8464.749 c-7762.9937 8464.749 -7763.1191 8465.2129 -7763.1191 8465.2549 c-7763.1191 8465.6777 -7760.2729 8465.7393 -7759.9146 8465.7393 c-7759.7666 8465.7393 -7759.6401 8465.6553 -7759.5352 8465.4863 c-7759.3447 8465.1924 -7758.1855 8463.9697 -7756.6255 8463.9697 c-7754.79 8463.9697 -7753.0825 8465.2324 -7753.0825 8467.1309 c-7753.0825 8467.2373 -7753.1245 8467.7842 -7753.1245 8467.8066 c-7753.1245 8467.8701 -7752.0063 8469.6191 -7750.6782 8469.6191 c-7749.6245 8469.6191 -7749.2656 8469.0303 -7749.2656 8468.5439 c-7749.2656 8468.3115 -7749.3711 8467.6592 -7749.8984 8467.6592 c-7750.1094 8467.6592 -7750.2144 8467.8701 -7750.2144 8468.249 c-7750.2144 8468.333 -7750.0039 8468.7129 -7750.0039 8468.8184 c-7750.0039 8468.8604 -7750.0239 8468.8818 -7750.0879 8468.8818 c-7750.4258 8468.8818 -7750.9521 8468.5234 -7751.1846 8467.8701 c-7751.4595 8467.1533 -7751.8594 8466.457 -7752.1958 8466.0557 c-7752.5127 8465.6982 -7752.6182 8465.1064 -7752.6182 8464.7695 c-7752.6182 8464.2842 -7752.1338 8463.125 -7750.4878 8463.125 c-7749.2871 8463.125 -7748.4434 8463.8633 -7748.4434 8464.4746 c-7748.4434 8465.0869 -7748.7598 8465.4658 -7749.2026 8465.4658 c-7749.6455 8465.4658 -7749.9824 8465.1279 -7749.9824 8464.79 c-7749.9824 8464.1162 -7750.1514 8463.9697 -7750.4878 8463.9697 c-7750.6992 8463.9697 -7750.8896 8464.0947 -7750.8896 8464.4111 c-7750.8896 8464.6436 -7750.8896 8465.0225 -7749.3711 8466.2881 c-7748.8857 8466.6885 -7748.4214 8467.3857 -7748.4214 8468.165 c-7748.4214 8468.9248 -7749.4561 8470.125 -7750.6362 8470.125 c-7751.8594 8470.125 -7752.6401 8469.3457 -7753.2515 8468.6289 c-7753.5454 8468.292 -7754.9814 8466.6045 -7755.0439 8466.582 c-7755.2334 8466.4346 -7755.3174 8466.3096 -7755.3174 8466.1826 c-7755.3174 8466.0771 -7755.2119 8465.9717 -7755.0854 8465.9717 c-7754.8535 8465.9717 -7753.9058 8466.9209 -7753.8198 8466.9209 c-7753.7568 8466.9209 -7753.7153 8466.8564 -7753.7153 8466.7725 c-7753.7153 8466.0137 -7754.8535 8464.5381 -7756.6255 8464.5381 c-7758.1006 8464.5381 -7758.9863 8465.6553 -7758.9863 8465.6982 c-7758.9863 8465.8242 -7758.8394 8465.9492 -7758.5225 8466.0137 c-7754.6426 8466.752 -7751.3955 8470.3018 -7751.3955 8474.918 c-7751.3955 8475.0244 -7751.2256 8475.0508 -7751.0786 8475.0508 c-7750.7202 8475.0508 -7750.0879 8475.1299 -7750.0879 8474.8564 c-7750.0879 8474.75 -7750.1294 8474.624 -7750.1934 8474.4971 c-7750.5518 8473.9268 -7750.8682 8473.7529 -7750.8682 8472.8018 c-7750.8682 8472.3389 -7750.4878 8471.8125 -7749.8984 8471.8125 c-7748.8657 8471.8125 -7748.4214 8472.8457 -7748.4214 8473.0771 c-7748.4214 8473.2461 -7748.5073 8473.3096 -7748.5903 8473.3096 c-7748.7178 8473.3096 -7749.2241 8472.7822 -7749.3711 8472.7822 c-7749.5615 8472.7822 -7749.7085 8472.8242 -7749.7085 8473.3096 c-7749.7085 8473.6475 -7748.4214 8477.3584 -7748.4214 8478.1592 c-7748.4214 8478.7295 -7748.7598 8479.4258 -7749.6455 8479.9307 c-7749.6875 8479.9521 -7749.7085 8479.9727 -7749.7085 8480.0146 c-7749.7085 8480.0986 -7749.5615 8480.2051 -7749.4126 8480.2461 c-7748.8018 8480.416 -7748.4214 8480.5215 -7748.4214 8481.4707 c-7748.4214 8481.8291 -7748.7598 8482.5039 -7749.0127 8482.5039 c-7749.2026 8482.5039 -7749.2026 8482.4609 -7749.2026 8482.1025 c-7749.2026 8481.9551 -7749.2446 8481.8496 -7749.3926 8481.7441 c-7749.7085 8481.5332 -7749.7295 8481.4912 -7749.8135 8481.0068 c-7749.8774 8480.6904 -7750.0039 8480.6045 -7751.1426 8479.9727 c-7751.5854 8479.6992 -7751.6904 8479.4668 -7751.7744 8479.2354 c-7751.8594 8479.0439 -7751.9233 8479.0439 -7752.4287 8479.0439 c-7752.9561 8479.0439 -7755.5073 8476.3252 -7755.5073 8476.1982 c-7755.5073 8476.1357 -7755.3809 8475.8398 -7755.3809 8475.7764 c-7755.3809 8475.7139 -7755.4014 8475.6719 -7755.4438 8475.6719 c-7755.4863 8475.6719 -7755.6338 8475.8818 -7755.6758 8475.8818 c-7755.7817 8475.8818 -7755.7817 8475.6924 -7755.7817 8475.5439 c-7755.7817 8475.4404 -7755.5703 8474.8701 -7755.5703 8474.7227 c-7755.5703 8474.6387 -7755.5918 8474.5752 -7755.6338 8474.5752 c-7755.7178 8474.5752 -7755.9072 8475.0381 -7755.9922 8475.0381 c-7756.0342 8475.0381 -7756.0762 8474.9971 -7756.0762 8474.8701 c-7756.0762 8474.7227 -7755.8862 8474.0059 y-7755.8862 8473.9424 -7755.9072 8473.8369 -7755.9502 8473.8369 c-7756.0342 8473.8369 -7756.1826 8474.2373 -7756.2666 8474.2373 c-7756.3286 8474.2373 -7756.3926 8474.1533 -7756.3926 8474.0059 c-7756.3926 8473.9209 -7756.2446 8473.5 -7756.2446 8473.3945 c-7756.2446 8473.3311 -7756.2666 8473.2666 -7756.3086 8473.2666 c-7756.3506 8473.2666 -7756.5835 8473.8799 -7756.7095 8473.8799 c-7756.7935 8473.8799 -7756.8994 8473.7725 -7756.8994 8473.668 c-7756.8994 8473.584 -7756.7729 8473.2256 -7756.7729 8473.1416 c-7756.7729 8473.0986 -7756.7729 8473.0771 -7756.7935 8473.0771 c-7756.8774 8473.0771 -7757.0254 8473.5625 -7757.1104 8473.5625 c-7757.3418 8473.5625 -7757.3623 8473.1416 -7757.3623 8472.9512 c-7757.3623 8472.8672 -7757.2998 8472.5303 -7757.2998 8472.4658 c-7757.2998 8472.4033 -7757.3198 8472.3818 -7757.3418 8472.3818 c-7757.4897 8472.3818 -7757.6782 8473.1826 -7757.8271 8473.1826 c-7758.0386 8473.1826 -7758.0386 8472.9932 -7758.0386 8472.7617 c-7758.0166 8472.2344 L-7758.0166 8472.2129 -7758.0386 8472.1924 y-7758.0586 8472.1924 -7758.1006 8472.2129 -7758.1226 8472.2764 c-7758.1855 8472.4873 -7758.3115 8472.9092 -7758.5225 8472.9092 c-7758.6694 8472.9092 -7758.8174 8472.7402 -7758.8174 8472.5938 c-7758.8174 8472.3604 -7758.7119 8471.9805 -7758.7119 8471.749 c-7758.7119 8471.6855 -7758.7334 8471.665 -7758.7754 8471.665 c-7758.8608 8471.665 -7758.9863 8472.1064 -7759.0278 8472.1924 c-7759.0918 8472.2764 -7759.1553 8472.2979 -7759.2192 8472.2979 c-7759.5352 8472.2979 -7759.5352 8471.9805 -7759.5352 8471.833 C-7759.4927 8471.4756 lf0 D-7760.8633 8467.1104 m-7760.8633 8466.8779 -7762.8042 8466.6885 -7762.8662 8466.6885 c-7762.9722 8466.6885 -7763.0352 8466.752 -7763.0352 8466.8564 c-7763.0352 8467.7217 -7761.2847 8469.957 -7760.8633 8469.957 c-7760.7998 8469.957 -7760.7783 8469.9365 -7760.7783 8469.873 c-7761.2002 8468.6289 -7761.2002 8468.376 v-7761.2002 8467.9961 -7761.0942 8467.7432 -7760.9058 8467.3213 c-7760.8838 8467.2373 -7760.8633 8467.1738 -7760.8633 8467.1104 cf-7752.1338 8478.5596 m-7751.9858 8478.5596 -7751.4795 8478.0547 -7751.3325 8478.0547 c-7751.2065 8478.0547 -7751.0791 8478.1387 -7751.0791 8478.2861 c-7751.0791 8478.3701 -7751.2695 8478.8125 -7751.2695 8478.918 c-7751.2695 8479.2764 -7750.8896 8479.5732 -7750.5098 8479.5732 c-7750.1094 8479.5732 -7748.9702 8479.2559 -7748.9702 8478.0322 c-7748.9702 8476.9365 -7749.3926 8476.9365 -7751.0366 8476.9365 c-7751.3955 8476.9365 -7753.0615 8477.126 -7753.3145 8477.126 c-7753.4399 8477.126 -7753.4834 8476.957 -7753.4834 8476.8301 c-7753.4834 8476.7891 -7753.4834 8476.7471 -7753.4614 8476.7256 c-7753.3984 8476.3467 -7753.1675 8475.7979 -7753.1675 8475.418 c-7753.1675 8470.9697 -7757.2998 8467.1104 -7759.7666 8467.1104 c-7760.4209 8467.1104 -7760.6519 8467.9121 -7760.6519 8468.333 c-7760.6519 8470.0625 -7758.6694 8471.0947 -7758.4175 8471.0947 c-7758.3545 8471.0947 -7758.3335 8471.0752 -7758.3335 8471.0322 c-7758.3335 8470.9902 -7758.3545 8470.9482 -7758.3975 8470.9063 c-7758.5225 8470.7373 -7759.0498 8470.125 -7759.0498 8469.4932 c-7759.0498 8469.1553 -7758.7554 8468.7129 -7757.9951 8468.7129 c-7756.7305 8468.7129 -7756.1826 8470.0625 -7756.1826 8470.4209 c-7756.1826 8470.5693 -7756.2446 8470.7793 -7756.4561 8470.7793 c-7756.6035 8470.7793 -7757.0049 8470.125 -7757.1519 8470.125 c-7757.2158 8470.125 -7757.4473 8470.252 -7757.5103 8470.252 c-7757.5942 8470.252 -7757.6582 8470.2314 -7757.7422 8470.2314 c-7757.8057 8470.2314 -7757.8481 8470.2939 -7757.8481 8470.3994 c-7757.8481 8470.7588 -7757.3623 8471.3271 -7756.8774 8471.5811 c-7755.9722 8472.0439 -7754.6226 8473.373 -7754.6226 8474.8281 c-7754.6226 8475.249 -7754.6846 8475.6504 -7754.6846 8475.9873 c-7754.6846 8476.5361 -7753.7568 8477.4004 -7752.8081 8478.2861 c-7752.6401 8478.4336 -7752.3862 8478.5596 -7752.1338 8478.5596 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7743.9722 8488.2803 m-7743.9722 8462.2529 L-7770 8462.2529 L-7770 8488.2803 L-7743.9722 8488.2803 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7752.6455 8475.2695 m-7743.9736 8475.2695 lS-7756.9839 8488.2803 m-7756.9839 8479.6045 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7752.7202 8470.9307 m-7743.9727 8470.9307 lS-7761.3232 8488.2803 m-7761.3232 8478.9258 lS0.7084 0.636438 0.515526 0.381872 K-7752.6504 8488.2803 m-7752.6504 8485.8672 l-7749.9937 8485.6436 -7748.3096 8483.9404 v-7746.6064 8482.2139 -7746.3774 8479.6084 y-7743.9727 8479.6084 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-7760.7783 8471.918 m-7760.7783 8471.7705 -7760.9058 8471.6855 -7761.0103 8471.6855 c-7761.0527 8471.6855 -7761.2432 8471.8975 -7761.3057 8471.8975 c-7761.3271 8471.8975 -7761.4326 8471.876 -7761.4326 8471.749 c-7761.4326 8471.6855 -7761.3271 8471.4121 y-7761.3271 8471.3906 -7763.4155 8468.8818 -7765.5654 8468.376 c-7765.7344 8468.3545 -7765.8398 8468.4385 -7765.9238 8468.1221 c-7766.3042 8466.8564 -7767.1265 8465.4229 -7768.3706 8464.0947 c-7768.4966 8463.9482 -7768.9185 8463.5264 -7769.1089 8463.5264 c-7769.2134 8463.5264 -7769.2974 8463.5459 -7769.2974 8463.7148 c-7769.2974 8464.0527 -7768.1167 8465.3809 -7767.9263 8465.7178 c-7767.0845 8467.1738 -7767.0845 8467.8477 -7767.0845 8468.0801 c-7767.0845 8468.2061 -7767.2734 8468.333 -7767.6538 8468.333 c-7767.8433 8468.333 -7768.0752 8468.3115 -7768.2017 8468.3115 c-7768.3281 8468.292 -7768.8975 8468.0156 -7769.0449 8468.0156 c-7769.2134 8468.0156 -7769.3193 8468.1436 -7769.3193 8468.3115 c-7769.3193 8468.5029 -7769.2559 8468.6289 -7769.0654 8468.7764 c-7768.3921 8469.3877 -7768.3486 8469.4082 -7768.3486 8469.8936 c-7768.3486 8470.168 -7769.0449 8471.3701 -7769.0449 8471.665 c-7769.0449 8471.9805 -7768.5806 8472.2129 -7768.3066 8472.2129 c-7767.4424 8472.2129 -7767.21 8470.7373 -7767.21 8470.4209 c-7767.21 8470.1885 -7767.5054 8469.0938 y-7767.5054 8468.9023 -7767.4424 8468.9023 -7766.9995 8468.9023 c-7766.6626 8468.9023 -7766.5986 8471.833 -7766.5986 8472.0439 c-7766.5986 8472.2129 -7766.6826 8472.3389 -7766.8511 8472.4463 c-7767.1265 8472.6357 -7768.4336 8473.9629 -7768.4121 8475.376 c-7768.4121 8477.8652 -7766.6406 8478.8125 -7765.9458 8478.8975 c-7765.5874 8478.9404 -7764.7007 8478.918 -7764.4058 8479.0879 c-7763.9424 8479.3193 -7762.8042 8480.4795 -7762.8042 8481.4707 c-7762.8042 8482.6719 -7763.5215 8483.0303 -7763.8774 8483.0303 c-7764.2378 8483.0303 -7764.5103 8483.0098 -7764.5103 8482.5244 c-7764.5103 8482.3135 -7764.3423 8482.0811 -7764.1318 8482.0186 c-7764.0474 8481.9971 -7763.2881 8481.8076 -7763.2881 8481.4912 c-7763.2881 8481.3428 -7763.3721 8481.3428 -7763.5835 8481.3428 c-7764.1318 8481.3428 -7764.8066 8481.1338 -7766.0928 8479.9307 c-7766.4722 8479.5938 -7767.1265 8479.5098 -7767.5679 8479.5098 c-7768.0537 8479.5098 -7769.2974 8479.9727 -7769.2974 8481.4707 c-7769.2974 8483.3037 -7768.4751 8484.001 -7767.8433 8484.001 c-7767.4209 8484.001 -7766.8936 8483.6836 -7766.8936 8483.4092 c-7766.8936 8483.0732 -7766.9575 8482.6514 -7767.5479 8482.6084 c-7768.0537 8482.5664 -7768.3066 8482.334 -7768.3066 8481.9971 c-7768.3066 8481.7861 -7768.1592 8481.5752 -7767.8218 8481.5752 c-7767.3154 8481.5752 -7766.7041 8482.1455 -7766.0713 8482.8828 c-7765.6714 8483.3682 -7764.7007 8483.8955 -7763.9209 8483.8955 c-7763.1191 8483.8955 -7762.0654 8482.9893 -7762.0654 8481.6172 c-7762.0654 8480.3525 -7763.4995 8479.0439 -7764.2378 8478.5186 c-7764.9546 8477.9912 -7765.3335 8477.6113 -7765.46 8477.4004 c-7765.5654 8477.2529 -7765.9033 8476.3037 -7766.1143 8476.3037 c-7766.2607 8476.3037 -7766.3672 8476.4717 -7766.3672 8476.6836 c-7766.3672 8477 -7766.1143 8477.6338 -7765.7759 8477.9697 c-7765.6929 8478.0752 -7765.6494 8478.1387 -7765.6494 8478.2012 c-7765.6494 8478.3496 -7765.8398 8478.3701 -7765.9873 8478.3701 c-7766.5767 8478.3701 -7767.7793 8477.4004 -7767.7793 8475.5664 c-7767.7793 8473.9844 -7766.7881 8473.1416 -7766.6406 8473.1416 c-7766.5361 8473.1416 -7766.4297 8473.2461 -7766.3672 8473.458 c-7764.6592 8479.6143 -7759.7822 8480.8379 -7757.3774 8480.8379 c-7757.2729 8480.8379 -7757.1895 8480.9004 -7757.1895 8481.0498 c-7757.1895 8481.1748 -7757.1895 8482.2725 -7757.3359 8482.2725 c-7757.3774 8482.2725 -7757.4414 8482.25 -7757.5264 8482.1875 c-7758.0942 8481.7236 -7758.3755 8481.3652 -7759.3022 8481.3652 c-7759.7666 8481.3652 -7760.5679 8481.8916 -7760.5679 8482.5039 c-7760.5679 8483.2832 -7759.8936 8484.001 -7759.4082 8484.001 c-7759.0498 8484.001 -7758.9023 8483.916 -7758.9023 8483.79 c-7758.9023 8483.6621 -7759.3662 8483.2207 -7759.3662 8483.0732 c-7759.3662 8482.8193 -7759.3242 8482.6719 -7758.8809 8482.6719 c-7758.4814 8482.6719 -7757.7842 8482.8418 -7757.3418 8483.0947 c-7756.8774 8483.3682 -7755.7393 8484.001 -7754.7065 8484.001 c-7753.9473 8484.001 -7752.9561 8483.5576 -7752.4702 8482.7568 c-7752.4287 8482.6924 -7752.3862 8482.6719 -7752.3447 8482.6719 c-7752.2393 8482.6719 -7752.1543 8482.7568 -7752.1338 8482.9053 c-7752.0913 8483.3037 -7751.7534 8484.001 -7750.9312 8484.001 c-7750.3408 8484.001 -7749.8135 8483.4941 -7749.8135 8483.0508 c-7749.8135 8482.8828 -7749.9194 8482.8193 -7750.0239 8482.8193 c-7750.1094 8482.8193 -7750.4878 8483.0732 -7750.5942 8483.0732 c-7750.7407 8483.0732 -7751.6479 8482.4609 -7751.7334 8482.3135 c-7752.5127 8481.0273 -7752.5977 8480.8799 -7753.2295 8480.626 c-7753.3984 8480.542 -7753.3984 8480.458 -7753.3984 8479.5938 c-7753.3984 8479.4668 -7753.3984 8479.1709 -7753.5454 8479.0029 c-7753.8198 8478.7295 -7755.9287 8476.6621 -7756.1392 8476.6621 c-7756.2241 8476.6621 -7756.4985 8476.9365 -7756.5835 8476.9365 c-7756.6035 8476.9365 -7756.6255 8476.9365 -7756.6255 8476.8945 C-7756.6035 8476.7471 l-7756.6035 8476.5791 -7756.6455 8476.4932 -7756.8564 8476.4932 c-7756.9199 8476.4932 -7757.1943 8476.6201 -7757.2568 8476.6201 c-7757.3198 8476.6201 -7757.3623 8476.1777 -7757.4473 8476.1777 c-7757.4678 8476.1777 -7757.8057 8476.4092 -7757.8896 8476.4092 c-7758.0166 8476.4092 -7758.1006 8476.3252 -7758.1006 8476.2197 c-7758.1006 8476.1572 -7758.1006 8475.6719 -7758.2065 8475.6719 c-7758.2915 8475.6719 -7758.5225 8475.9658 -7758.5654 8475.9658 c-7758.5854 8475.9658 -7758.5854 8475.9463 -7758.5854 8475.8818 C-7758.5439 8475.4609 l-7758.5439 8475.3965 -7758.5854 8475.376 -7758.6494 8475.376 c-7758.7119 8475.376 -7758.9658 8475.6924 -7759.0498 8475.6924 c-7759.0918 8475.6924 -7759.1138 8475.6504 -7759.1138 8475.5664 c-7759.1138 8475.5244 -7758.9233 8474.8076 -7758.9233 8474.6592 c-7758.9233 8474.5752 -7758.9658 8474.5322 -7759.0078 8474.5322 c-7759.0918 8474.5322 -7759.4297 8474.8916 -7759.4722 8474.8916 c-7759.4927 8474.8916 -7759.4927 8474.8916 -7759.4927 8474.8701 c-7759.4927 8474.7861 -7759.3882 8474.4268 -7759.3882 8474.4072 c-7759.3882 8474.3857 -7759.4082 8474.3643 -7759.4297 8474.3643 c-7759.4722 8474.3643 -7759.6826 8474.5752 -7759.7446 8474.5752 c-7759.7666 8474.5752 -7759.7666 8474.5752 -7759.7666 8474.5322 c-7759.7666 8474.3643 -7759.5137 8473.626 -7759.5137 8473.5625 c-7759.5137 8473.541 -7759.5352 8473.5205 -7759.5562 8473.5205 c-7759.6826 8473.5205 -7760.1055 8474.0908 -7760.1465 8474.0908 c-7760.1675 8474.0908 -7760.1675 8474.0693 -7760.1675 8474.0059 c-7760.1675 8473.8154 -7759.8936 8472.9092 y-7759.8936 8472.8877 -7759.9146 8472.8672 -7759.9351 8472.8672 c-7760.0615 8472.8672 -7760.4414 8473.4141 -7760.5049 8473.4141 c-7760.5264 8473.4141 -7760.5264 8473.4141 -7760.5264 8473.373 c-7760.2729 8472.4658 -7760.2729 8472.3818 v-7760.2729 8472.2764 -7760.3154 8472.2344 -7760.3994 8472.2344 c-7760.4634 8472.2344 -7760.6943 8472.5713 -7760.7783 8472.5713 c-7760.8218 8472.5713 -7760.8418 8472.5303 -7760.8418 8472.4658 c-7760.7783 8471.918 Lf1 D-7765.0386 8471.1807 m-7765.1016 8471.2217 -7765.1865 8471.2432 -7765.2495 8471.2432 c-7765.5874 8471.2432 -7765.6714 8469.2402 -7765.6714 8469.0498 c-7765.6714 8468.9873 -7765.6289 8468.9463 -7765.5654 8468.9463 c-7764.4272 8468.9463 -7762.5498 8470.9072 -7762.5498 8471.3271 c-7762.5498 8471.3701 -7762.5498 8471.3906 -7762.5928 8471.3906 c-7762.6138 8471.3906 -7762.6553 8471.3701 -7762.6982 8471.3486 c-7763.0986 8471.0752 -7763.5215 8470.9697 -7764.1104 8470.9697 c-7764.4902 8470.9697 -7764.7007 8471.0322 -7765.0386 8471.1807 cf-7763.3306 8475.1436 m-7762.8882 8475.9658 -7761.8115 8475.9658 -7761.7271 8475.9658 c-7761.5801 8475.9658 -7761.3906 8475.9463 -7761.3906 8475.7764 c-7761.3906 8475.5869 -7762.4238 8475.334 -7762.4238 8475.1436 c-7762.2129 8474.8076 -7762.2129 8474.7227 v-7762.2129 8474.3232 -7762.2129 8474.2803 -7762.0225 8474.2803 c-7761.7915 8474.2803 -7760.9897 8474.5752 -7760.7378 8475.292 c-7760.5474 8475.8193 -7759.5767 8477.5469 -7757.4258 8477.5469 c-7756.5615 8477.5469 -7756.2446 8477.4004 -7756.0977 8477.4004 c-7755.7817 8477.4004 -7753.8418 8479.4463 -7753.8198 8479.6143 c-7753.7998 8479.7197 -7753.7998 8479.8467 -7753.7998 8479.9521 c-7753.7998 8480.1631 -7753.7998 8480.5635 -7754.1782 8480.8164 c-7754.3896 8480.9434 -7754.4951 8481.1963 -7754.4951 8481.4482 c-7754.4951 8481.5547 -7754.4951 8481.9131 -7754.2207 8481.9131 c-7753.9473 8481.9131 -7753.9058 8481.7656 -7753.9058 8481.4707 c-7753.9058 8481.2822 -7753.7358 8481.1748 -7753.5889 8481.1748 c-7753.4399 8481.1748 -7752.8506 8481.4707 -7752.8506 8481.8916 c-7752.8506 8482.124 -7753.1455 8483.1992 -7754.4321 8483.1992 c-7755.4014 8483.1992 -7755.4014 8483.0732 -7755.4014 8481.6797 c-7755.4014 8480.416 -7755.3594 8480.0146 -7755.2119 8478.877 c-7755.1904 8478.877 -7755.1904 8478.8555 y-7755.1904 8478.708 -7755.3174 8478.6445 -7755.4233 8478.6445 c-7755.4438 8478.6445 -7755.4648 8478.665 -7755.4863 8478.665 c-7755.6118 8478.6865 -7755.9072 8479.0029 -7756.8145 8478.9805 c-7758.7119 8478.9805 -7762.9087 8477.4219 -7764.2793 8474.9336 c-7764.8906 8473.8584 -7765.2705 8472.4873 -7765.2705 8472.2344 c-7765.2705 8471.6855 -7764.2578 8471.5176 -7764.0049 8471.5176 c-7762.6553 8471.5176 -7761.2847 8473.1826 -7761.2847 8473.626 c-7761.2847 8473.668 -7761.3271 8473.71 -7761.3486 8473.71 c-7761.3906 8473.71 -7761.4326 8473.6895 -7761.4961 8473.6475 c-7761.6431 8473.5 -7762.2334 8472.8457 -7762.8662 8472.8457 c-7763.5625 8472.8457 -7763.5835 8473.3096 -7763.5835 8473.7314 c-7763.5835 8474.1748 -7763.5415 8474.7432 -7763.3306 8475.1436 cf0 D-7759.5352 8471.833 m-7759.5352 8471.9805 -7759.5352 8472.2979 -7759.2192 8472.2979 c-7759.1553 8472.2979 -7759.0918 8472.2764 -7759.0278 8472.1924 c-7758.9863 8472.1064 -7758.8608 8471.665 -7758.7754 8471.665 c-7758.7334 8471.665 -7758.7119 8471.6855 -7758.7119 8471.749 c-7758.7119 8471.9805 -7758.8174 8472.3604 -7758.8174 8472.5938 c-7758.8174 8472.7402 -7758.6694 8472.9092 -7758.5225 8472.9092 c-7758.3115 8472.9092 -7758.1855 8472.4873 -7758.1226 8472.2764 c-7758.1006 8472.2129 -7758.0586 8472.1924 -7758.0386 8472.1924 c-7758.0166 8472.2129 -7758.0166 8472.2344 V-7758.0386 8472.7617 l-7758.0386 8472.9932 -7758.0386 8473.1826 -7757.8271 8473.1826 c-7757.6782 8473.1826 -7757.4897 8472.3818 -7757.3418 8472.3818 c-7757.3198 8472.3818 -7757.2998 8472.4033 -7757.2998 8472.4658 c-7757.2998 8472.5303 -7757.3623 8472.8672 -7757.3623 8472.9512 c-7757.3623 8473.1416 -7757.3418 8473.5625 -7757.1104 8473.5625 c-7757.0254 8473.5625 -7756.8774 8473.0771 -7756.7935 8473.0771 c-7756.7729 8473.0771 -7756.7729 8473.0986 -7756.7729 8473.1416 c-7756.7729 8473.2256 -7756.8994 8473.584 -7756.8994 8473.668 c-7756.8994 8473.7725 -7756.7935 8473.8799 -7756.7095 8473.8799 c-7756.5835 8473.8799 -7756.3506 8473.2666 -7756.3086 8473.2666 c-7756.2666 8473.2666 -7756.2446 8473.3311 -7756.2446 8473.3945 c-7756.2446 8473.5 -7756.3926 8473.9209 -7756.3926 8474.0059 c-7756.3926 8474.1533 -7756.3286 8474.2373 -7756.2666 8474.2373 c-7756.1826 8474.2373 -7756.0342 8473.8369 -7755.9502 8473.8369 c-7755.9072 8473.8369 -7755.8862 8473.9424 -7755.8862 8474.0059 c-7756.0762 8474.7227 -7756.0762 8474.8701 v-7756.0762 8474.9971 -7756.0342 8475.0381 -7755.9922 8475.0381 c-7755.9072 8475.0381 -7755.7178 8474.5752 -7755.6338 8474.5752 c-7755.5918 8474.5752 -7755.5703 8474.6387 -7755.5703 8474.7227 c-7755.5703 8474.8701 -7755.7817 8475.4404 -7755.7817 8475.5439 c-7755.7817 8475.6924 -7755.7817 8475.8818 -7755.6758 8475.8818 c-7755.6338 8475.8818 -7755.4863 8475.6719 -7755.4438 8475.6719 c-7755.4014 8475.6719 -7755.3809 8475.7139 -7755.3809 8475.7764 c-7755.3809 8475.8398 -7755.5073 8476.1357 -7755.5073 8476.1982 c-7755.5073 8476.3252 -7752.9561 8479.0439 -7752.4287 8479.0439 c-7751.9233 8479.0439 -7751.8594 8479.0439 -7751.7744 8479.2354 c-7751.6904 8479.4668 -7751.5854 8479.6992 -7751.1426 8479.9727 c-7750.0039 8480.6045 -7749.8774 8480.6904 -7749.8135 8481.0068 c-7749.7295 8481.4912 -7749.7085 8481.5332 -7749.3926 8481.7441 c-7749.2446 8481.8496 -7749.2026 8481.9551 -7749.2026 8482.1025 c-7749.2026 8482.4609 -7749.2026 8482.5039 -7749.0127 8482.5039 c-7748.7598 8482.5039 -7748.4214 8481.8291 -7748.4214 8481.4707 c-7748.4214 8480.5215 -7748.8018 8480.416 -7749.4126 8480.2461 c-7749.5615 8480.2051 -7749.7085 8480.0986 -7749.7085 8480.0146 c-7749.7085 8479.9727 -7749.6875 8479.9521 -7749.6455 8479.9307 c-7748.7598 8479.4258 -7748.4214 8478.7295 -7748.4214 8478.1592 c-7748.4214 8477.3584 -7749.7085 8473.6475 -7749.7085 8473.3096 c-7749.7085 8472.8242 -7749.5615 8472.7822 -7749.3711 8472.7822 c-7749.2241 8472.7822 -7748.7178 8473.3096 -7748.5903 8473.3096 c-7748.5073 8473.3096 -7748.4214 8473.2461 -7748.4214 8473.0771 c-7748.4214 8472.8457 -7748.8657 8471.8125 -7749.8984 8471.8125 c-7750.4878 8471.8125 -7750.8682 8472.3389 -7750.8682 8472.8018 c-7750.8682 8473.7529 -7750.5518 8473.9268 -7750.1934 8474.4971 c-7750.1294 8474.624 -7750.0879 8474.75 -7750.0879 8474.8564 c-7750.0879 8475.1299 -7750.7202 8475.0508 -7751.0786 8475.0508 c-7751.2256 8475.0508 -7751.3955 8475.0244 -7751.3955 8474.918 c-7751.3955 8470.3018 -7754.6426 8466.752 -7758.5225 8466.0137 c-7758.8394 8465.9492 -7758.9863 8465.8242 -7758.9863 8465.6982 c-7758.9863 8465.6553 -7758.1006 8464.5381 -7756.6255 8464.5381 c-7754.8535 8464.5381 -7753.7153 8466.0137 -7753.7153 8466.7725 c-7753.7153 8466.8564 -7753.7568 8466.9209 -7753.8198 8466.9209 c-7753.9058 8466.9209 -7754.8535 8465.9717 -7755.0854 8465.9717 c-7755.2119 8465.9717 -7755.3174 8466.0771 -7755.3174 8466.1826 c-7755.3174 8466.3096 -7755.2334 8466.4346 -7755.0439 8466.582 c-7754.9814 8466.6045 -7753.5454 8468.292 -7753.2515 8468.6289 c-7752.6401 8469.3457 -7751.8594 8470.125 -7750.6362 8470.125 c-7749.4561 8470.125 -7748.4214 8468.9248 -7748.4214 8468.165 c-7748.4214 8467.3857 -7748.8857 8466.6885 -7749.3711 8466.2881 c-7750.8896 8465.0225 -7750.8896 8464.6436 -7750.8896 8464.4111 c-7750.8896 8464.0947 -7750.6992 8463.9697 -7750.4878 8463.9697 c-7750.1514 8463.9697 -7749.9824 8464.1162 -7749.9824 8464.79 c-7749.9824 8465.1279 -7749.6455 8465.4658 -7749.2026 8465.4658 c-7748.7598 8465.4658 -7748.4434 8465.0869 -7748.4434 8464.4746 c-7748.4434 8463.8643 -7749.2871 8463.125 -7750.4878 8463.125 c-7752.1338 8463.125 -7752.6182 8464.2842 -7752.6182 8464.7695 c-7752.6182 8465.1064 -7752.5127 8465.6982 -7752.1958 8466.0557 c-7751.8594 8466.457 -7751.4595 8467.1533 -7751.1846 8467.8701 c-7750.9521 8468.5234 -7750.4258 8468.8818 -7750.0879 8468.8818 c-7750.0239 8468.8818 -7750.0039 8468.8604 -7750.0039 8468.8184 c-7750.0039 8468.7129 -7750.2144 8468.333 -7750.2144 8468.249 c-7750.2144 8467.8701 -7750.1094 8467.6592 -7749.8984 8467.6592 c-7749.3711 8467.6592 -7749.2656 8468.3115 -7749.2656 8468.5439 c-7749.2656 8469.0303 -7749.6245 8469.6191 -7750.6782 8469.6191 c-7752.0063 8469.6191 -7753.1245 8467.8701 -7753.1245 8467.8066 c-7753.1245 8467.7842 -7753.0825 8467.2373 -7753.0825 8467.1309 c-7753.0825 8465.2324 -7754.79 8463.9697 -7756.6255 8463.9697 c-7758.1855 8463.9697 -7759.3447 8465.1924 -7759.5352 8465.4863 c-7759.6401 8465.6553 -7759.7666 8465.7393 -7759.9146 8465.7393 c-7760.2729 8465.7393 -7763.1191 8465.6777 -7763.1191 8465.2549 c-7763.1191 8465.2129 -7762.9937 8464.749 -7762.8242 8464.749 c-7762.7607 8464.749 -7762.6982 8464.79 -7762.6353 8464.8545 c-7762.4438 8465.0869 -7762.0225 8465.2129 -7761.6431 8465.2129 c-7761.0942 8465.2129 -7760.1895 8464.6221 -7760.1895 8463.8848 c-7760.1895 8463.5889 -7760.5679 8463.1045 -7760.8838 8463.1045 c-7761.1377 8463.1045 -7762.1914 8463.8213 -7762.4238 8463.8213 c-7762.7402 8463.8213 -7762.8662 8463.6729 -7763.1606 8463.3359 c-7763.3306 8463.1465 -7763.4575 8463.125 -7763.6465 8463.125 c-7763.8154 8463.125 -7763.9634 8463.2305 -7763.9634 8463.3779 c-7763.9634 8463.5459 -7763.6465 8463.8643 -7763.6265 8464.1377 c-7763.6265 8464.2842 -7763.6055 8464.5156 -7763.6055 8464.7061 c-7763.6055 8464.96 -7763.6265 8465.3184 -7763.8994 8465.3184 c-7764.7217 8465.3184 -7766.7681 8464.0322 -7767.6538 8463.4404 c-7768.1592 8463.1045 -7768.2432 8463.1045 -7768.3066 8463.1045 c-7768.4336 8463.1045 -7768.5176 8463.1885 -7768.5176 8463.3359 c-7768.5176 8463.4619 -7766.0713 8465.6143 -7763.8994 8466.3506 c-7763.5835 8466.457 -7763.6055 8466.6045 -7763.5625 8466.7725 c-7763.1406 8468.5234 -7761.5166 8470.6963 -7760.9263 8470.6963 c-7760.7783 8470.6963 -7760.7158 8470.6963 -7760.7158 8470.8018 c-7760.7158 8471.0107 -7760.6104 8471.2432 -7760.4634 8471.2432 c-7760.4209 8471.2432 -7760.2524 8471.0107 -7760.21 8471.0107 c-7760.1255 8471.0107 -7760.0615 8471.4756 -7760.0415 8471.5586 c-7759.9995 8471.665 -7759.9146 8471.749 -7759.8506 8471.749 c-7759.7666 8471.749 -7759.5986 8471.4121 -7759.5352 8471.4121 c-7759.5137 8471.4121 -7759.4927 8471.4316 -7759.4927 8471.4756 c-7759.5352 8471.833 Lf1 D-7760.9058 8467.3213 m-7761.0942 8467.7432 -7761.2002 8467.9961 -7761.2002 8468.376 c-7761.2002 8468.6289 -7760.7783 8469.873 y-7760.7783 8469.9365 -7760.7998 8469.957 -7760.8633 8469.957 c-7761.2847 8469.957 -7763.0352 8467.7217 -7763.0352 8466.8564 c-7763.0352 8466.752 -7762.9722 8466.6885 -7762.8662 8466.6885 c-7762.8042 8466.6885 -7760.8633 8466.8779 -7760.8633 8467.1104 c-7760.8633 8467.1738 -7760.8838 8467.2373 -7760.9058 8467.3213 cf-7752.8081 8478.2861 m-7753.7568 8477.4004 -7754.6846 8476.5361 -7754.6846 8475.9873 c-7754.6846 8475.6504 -7754.6226 8475.249 -7754.6226 8474.8281 c-7754.6226 8473.373 -7755.9722 8472.0439 -7756.8774 8471.5811 c-7757.3623 8471.3271 -7757.8481 8470.7588 -7757.8481 8470.3994 c-7757.8481 8470.2939 -7757.8057 8470.2314 -7757.7422 8470.2314 c-7757.6582 8470.2314 -7757.5942 8470.252 -7757.5103 8470.252 c-7757.4473 8470.252 -7757.2158 8470.125 -7757.1519 8470.125 c-7757.0049 8470.125 -7756.6035 8470.7803 -7756.4561 8470.7803 c-7756.2446 8470.7803 -7756.1826 8470.5693 -7756.1826 8470.4209 c-7756.1826 8470.0625 -7756.7305 8468.7129 -7757.9951 8468.7129 c-7758.7554 8468.7129 -7759.0498 8469.1553 -7759.0498 8469.4932 c-7759.0498 8470.125 -7758.5225 8470.7373 -7758.3975 8470.9072 c-7758.3545 8470.9482 -7758.3335 8470.9902 -7758.3335 8471.0322 c-7758.3335 8471.0752 -7758.3545 8471.0947 -7758.4175 8471.0947 c-7758.6694 8471.0947 -7760.6519 8470.0625 -7760.6519 8468.333 c-7760.6519 8467.9121 -7760.4209 8467.1104 -7759.7666 8467.1104 c-7757.2998 8467.1104 -7753.1675 8470.9697 -7753.1675 8475.418 c-7753.1675 8475.7979 -7753.3984 8476.3467 -7753.4614 8476.7256 c-7753.4834 8476.7471 -7753.4834 8476.7891 -7753.4834 8476.8301 c-7753.4834 8476.957 -7753.4399 8477.126 -7753.3145 8477.126 c-7753.0615 8477.126 -7751.3955 8476.9365 -7751.0366 8476.9365 c-7749.3926 8476.9365 -7748.9702 8476.9365 -7748.9702 8478.0322 c-7748.9702 8479.2559 -7750.1094 8479.5732 -7750.5098 8479.5732 c-7750.8896 8479.5732 -7751.2695 8479.2764 -7751.2695 8478.918 c-7751.2695 8478.8125 -7751.0791 8478.3701 -7751.0791 8478.2861 c-7751.0791 8478.1387 -7751.2065 8478.0547 -7751.3325 8478.0547 c-7751.4795 8478.0547 -7751.9858 8478.5596 -7752.1338 8478.5596 c-7752.3862 8478.5596 -7752.6401 8478.4336 -7752.8081 8478.2861 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(flat/ Adobe Calligraphic Brush Tool/ 3 pt. rund/ Adobe Calligr) -(aphic Brush Tool/ 7 pt. rund/ Adobe Calligraphic Brush Tool/ 1) -(5 pt. rund/ Adobe ArtOnPath Brush Tool/ Tr\212kol/ Adobe ArtOnPat) -(h Brush Tool/ Avsmalnande linje/ Adobe ArtOnPath Brush Tool/ B) -(lomsterhjul/ Adobe PatternOnPath Brush Tool/ R\232d pilpensel / A) -(dobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. rund)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. rund)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. rund)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Avsmalnande linje)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Blomsterhjul)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tr\612kol)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(R\632d pilpensel )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registrering]) 0 Xs([Registrering])Pc0 0 0 0 k(Vit)Pc0 0 0 1 k(Svart)Pc0 1 1 0 k(CMYK r\632d)Pc0 0 1 0 k(CMYK gul)Pc1 0 1 0 k(CMYK gr\632n)Pc1 0 0 0 k(CMYK cyan)Pc1 1 0 0 k(CMYK bl\614)Pc0 1 0 0 k(CMYK magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linj\612r \632vertoning) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linj\612r \632vertoning)PcBb2 (Tona till svart) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Tona till svart)PcBb0 0 0 0 Bh2 (Radiell \632vertoning) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radiell \632vertoning)PcBb0 0 0 0 Bh2 (Mjuk svart vinjett) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Mjuk svart vinjett)PcBb2 (Solnedg\614ng - \632ken) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Solnedg\614ng - \632ken)PcBb0 0 0 0 Bh2 (Koppar, radiell) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Koppar, radiell)Pc(Fiskm\632nster) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fiskm\632nster)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Lager 1) Ln0 Auu*u0 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR303.9805 327.9707 m303.9805 318.6875 296.5371 311.3184 287.0391 311.3184 c280.0234 311.3184 275.418 316.0645 275.418 323.3633 c275.418 331.8711 283.2148 339.3848 292.1426 339.3848 c299.375 339.3848 303.9805 334.9199 303.9805 327.9707 cf1 D287.5371 327.6191 m287.5371 325.9141 288.5293 324.6406 289.875 324.6406 c291.9316 324.6406 293.7734 326.9082 293.7734 329.4609 c293.7734 331.1621 292.7813 332.3652 291.3633 332.3652 c289.3789 332.3652 287.5371 330.0977 287.5371 327.6191 cf*U*u0 D324.0391 338.959 m325.5293 338.959 326.168 338.3184 326.168 336.9746 c326.168 335.4824 325.6719 333.6426 325.1035 332.9316 c324.6094 332.3652 323.7578 332.084 322.6934 332.084 c318.9375 332.084 L317.8047 327.4043 316.8828 322.7988 316.8828 321.6641 c316.8828 319.8926 318.0859 318.8301 320.0703 318.8301 c320.8516 318.8301 321.5605 319.043 322.9063 319.5371 c323.543 319.8203 324.1133 319.9629 324.5352 319.9629 c325.1758 319.9629 325.6719 319.4668 325.6719 318.7559 c325.6719 317.5527 324.3945 315.9941 322.0566 314.3633 c319.5762 312.5918 316.2441 311.5293 313.1973 311.5293 c308.3066 311.5293 304.6914 314.5762 304.6914 318.6152 c304.6914 320.5293 304.834 321.166 306.7461 327.1934 c307.5273 329.5293 307.7402 330.3828 308.0938 332.084 c306.3926 332.2949 305.6133 333.0039 305.6133 334.4219 c305.6133 336.1211 306.4648 337.1152 311.709 341.4375 c316.3867 345.3379 319.0801 347.0371 320.7109 347.0371 c321.6309 347.0371 322.3398 346.3281 322.3398 345.4082 c322.3398 344.9824 322.3398 344.9824 321.2773 341.5801 c320.7813 339.9492 320.7813 339.8086 320.6387 338.959 C324.0391 338.959 lf*U*u331.9961 347.8867 m332.1367 348.6699 332.209 349.3047 332.209 349.9434 c332.209 351.2207 331.8555 351.7168 330.6484 352.209 c333.4141 354.834 337.0273 356.4629 340.0039 356.4629 c342.5547 356.4629 344.2559 354.9746 344.2559 352.8496 c344.2559 352.3516 344.1875 351.9277 344.1152 351.502 c337.7383 322.4434 L337.5957 321.9473 337.5254 321.3809 337.5254 321.0254 c337.5254 319.8203 338.3047 319.043 339.5801 319.043 c340.0039 319.043 340.5 319.1113 340.998 319.3242 c342.1328 319.748 342.4141 319.8203 342.6289 319.8203 c343.2656 319.8203 343.832 319.1836 343.832 318.4746 c343.832 317.6973 343.0508 316.5605 341.7773 315.3555 c339.084 312.875 335.4688 311.3887 332.0664 311.3887 c328.0977 311.3887 325.4043 313.7949 325.4043 317.3418 c325.4043 317.8359 325.4746 318.4746 325.6172 319.1113 C331.9961 347.8867 lf*U*u372.7656 323.4355 m372.4805 322.2305 372.3418 321.3105 372.3418 320.9551 c372.3418 319.8926 373.2617 319.043 374.4648 319.043 c374.8906 319.043 375.3867 319.1113 375.8828 319.3242 c376.875 319.6074 377.3008 319.748 377.5137 319.748 c378.1504 319.748 378.7188 319.1836 378.7188 318.4746 c378.7188 315.4961 371.7734 311.3184 366.8125 311.3184 c363.4805 311.3184 361.0703 313.7266 361.0703 317.0566 c361.0703 317.4824 361.0703 318.0488 361.1426 318.6875 c358.7305 315.7109 358.2344 315.1426 357.0313 314.0098 c355.2578 312.2383 352.7773 311.1758 350.793 311.1758 c346.6133 311.1758 343.5645 315.0723 343.5645 320.5293 c343.5645 330.0254 351.2891 339.3848 359.1563 339.3848 c361.9219 339.3848 364.2598 338.3184 366.0313 336.334 c369.5059 338.7441 370.5664 339.2402 372.4805 339.2402 c374.3242 339.2402 375.6719 338.1074 375.6016 336.6191 c375.6016 336.1934 375.5293 335.6953 375.3867 335.2012 C372.7656 323.4355 lf1 D357.0313 327.4746 m357.0313 325.7734 357.8809 324.7832 359.3711 324.7832 c361.2852 324.7832 363.127 327.2617 363.127 329.8145 c363.127 331.1621 362.2773 332.0117 360.9297 332.0117 c358.873 332.0117 357.0313 329.8145 357.0313 327.4746 cf*U*u0 D381.7793 330.666 m381.9922 331.9395 382.1328 332.7207 382.1328 333.3594 c382.1328 334.4902 381.7793 334.9863 380.5742 335.625 c384.1172 338.3184 387.0938 339.5957 390.0684 339.5957 c392.834 339.5957 394.1094 338.3906 394.3203 335.625 c397.4414 338.3184 400.7031 339.666 404.0313 339.666 c407.791 339.666 410.4121 337.3262 410.4121 333.9258 c410.4121 333.3594 410.3398 332.5801 410.1289 331.8711 c408.0742 323.0117 L407.9336 322.2305 407.791 321.5215 407.791 321.166 c407.791 319.8926 408.5684 319.1113 409.916 319.1113 c410.5527 319.1113 410.5527 319.1113 412.75 319.8203 c412.9648 319.8203 L413.5996 319.8203 414.0977 319.3242 414.0977 318.5469 c414.0977 315.4961 407.3652 311.459 402.2598 311.459 c398.2227 311.459 395.7402 313.7266 395.7402 317.2695 c395.7402 317.625 395.8105 318.2617 395.9531 318.7559 c397.5137 326.2715 L397.6563 326.8379 397.7266 327.4746 397.7266 327.9004 c397.7266 328.9648 396.9453 329.7441 395.7402 329.7441 c393.8984 329.7441 392.5508 328.2559 391.9141 325.3496 c389.998 316.8438 L389.3633 313.8652 387.377 312.0957 384.8965 312.0957 c381.918 312.0957 L379.8633 312.0957 378.7305 311.6699 377.3125 310.4648 C381.7793 330.666 lf*U*u437.2266 347.959 m437.4375 348.6699 437.5078 349.4473 437.5078 350.0156 c437.5078 351.2207 437.2266 351.6445 435.8086 352.4961 c439.8516 355.4707 442.1875 356.4629 445.166 356.4629 c447.8594 356.4629 449.4199 355.0449 449.4199 352.6367 c449.4199 352.2813 449.3438 351.9277 449.2773 351.502 c443.0391 323.293 L442.8281 322.5859 442.7539 321.877 442.7539 321.3809 c442.7539 320.0352 443.5352 319.1836 444.8125 319.1836 c445.166 319.1836 445.6641 319.252 446.1602 319.3965 c447.293 319.748 447.7207 319.8926 447.9297 319.8926 c448.5664 319.8926 449.0625 319.3242 449.0625 318.6152 c449.0625 315.5684 442.2598 311.3887 437.2266 311.3887 c433.8223 311.3887 431.2734 313.7949 431.2734 316.916 c431.2734 317.4824 431.2734 317.9063 431.3438 318.5469 c427.4473 313.3711 424.4688 311.3184 420.9258 311.3184 c416.6016 311.3184 413.8398 314.9316 413.8398 320.5996 c413.8398 325.1348 415.6113 330.0254 418.7285 333.7832 c421.7754 337.4688 425.4609 339.3848 429.6445 339.3848 c432.0527 339.3848 433.4707 338.8867 434.959 337.6816 C437.2266 347.959 lf1 D427.0195 327.334 m427.0195 325.7031 427.8711 324.6406 429.2871 324.6406 c431.3438 324.6406 433.4004 327.2617 433.4004 329.8848 c433.4004 331.2324 432.4102 332.2949 431.1328 332.2949 c429.0762 332.2949 427.0195 329.8848 427.0195 327.334 cf*U*u0 D474.9648 333.502 m474.9648 331.6582 473.4063 330.0254 471.4922 330.0254 c470.2148 330.0254 469.2246 330.5957 467.3789 332.2949 c466.1758 333.502 465.3281 333.9961 464.5488 333.9961 c463.8398 333.9961 463.2012 333.4297 463.2012 332.791 c463.2012 331.6582 463.623 331.3027 467.877 328.9648 c471.4219 326.9785 473.3379 324.4277 473.3379 321.6641 c473.3379 315.4961 467.666 311.2461 459.3691 311.2461 c452.6367 311.2461 448.0313 314.1504 448.0313 318.4023 c448.0313 320.9551 449.9473 322.9395 452.3555 322.9395 c453.6328 322.9395 455.0508 322.3691 456.2539 321.4512 c456.4688 321.2383 457.1719 320.5293 458.3086 319.1836 c459.4453 317.9785 460.7188 317.2695 461.6406 317.2695 c462.4883 317.2695 463.2012 317.9785 463.2012 318.8301 c463.2012 319.748 462.7031 320.1738 459.0879 322.5137 c454.0547 325.7734 452.707 327.4746 452.707 330.8066 c452.707 335.4824 457.8809 339.4551 464.1211 339.4551 c470.2852 339.4551 474.9648 336.9023 474.9648 333.502 cf*U*u526.4961 344.9121 m526.9922 344.9121 527.4902 344.2734 527.4902 343.6367 c527.4902 340.377 520.4004 335.8398 515.3008 335.8398 c509.1992 335.8398 504.4512 340.4453 504.4512 346.3984 c504.4512 353.6973 511.043 359.3691 519.4805 359.3691 c523.0254 359.3691 524.5117 359.0137 531.1758 356.5332 c533.7246 355.541 535.4258 355.0449 538.1211 354.2676 c540.3867 356.1094 542.2305 356.8887 544.5 356.8887 c547.0488 356.8887 548.75 355.541 548.75 353.4863 c548.75 350.6504 545.9141 348.8086 541.7344 348.8086 c541.0957 348.8086 L539.1133 345.0508 537.7656 341.5098 537.3398 339.0273 c543.1523 340.0215 545.9141 342.7148 550.8047 352.4961 c554.1387 358.7324 557.7539 361.5664 562.2891 361.5664 c565.9746 361.5664 568.6699 359.5098 568.6699 356.7461 c568.6699 354.6211 566.8945 352.707 564.9141 352.707 c564.4141 352.707 563.8477 352.7773 563.209 352.9902 c562.4297 353.2734 561.6504 353.416 561.293 353.416 c560.0918 353.416 559.166 352.5684 557.7539 350.0156 c552.4375 341.0137 550.0957 338.5332 545.0684 336.5488 c550.0957 335.6953 551.6543 333.502 551.7266 327.4043 c551.7949 325.7734 552.1523 325.0645 552.8613 325.0645 c553.0742 325.0645 553.2891 325.0645 553.5 325.1348 c553.8555 325.207 554.1387 325.2773 554.3496 325.2773 c554.918 325.2773 555.4102 324.5684 555.4102 323.7891 c555.4102 322.4434 554.4219 319.9629 553.0742 317.8359 c550.5234 313.7949 546.9082 311.459 543.293 311.459 c541.8047 311.459 540.1758 312.2383 539.1836 313.3711 c538.3301 314.4355 537.9785 315.8535 537.9785 318.1895 c537.9785 320.1738 537.9785 320.1738 539.1133 325.4902 c539.3262 326.5527 539.4668 327.6895 539.4668 328.6074 c539.4668 330.3105 538.8984 331.6582 537.8359 332.2246 c537.2695 332.5801 537.1289 332.5801 535.7813 332.6504 c535.3555 332.6504 L535.002 331.373 L533.2266 324.502 L531.8086 318.8301 528.8359 313.2305 525.5039 309.8281 c521.25 305.5762 514.8711 302.8809 508.9863 302.8809 c499.4238 302.8809 492.1211 309.2598 492.1211 317.625 c492.1211 323.4355 495.5215 328.6074 501.3359 331.5859 c504.3125 333.0762 507.7852 333.9258 510.9023 333.9258 c513.457 333.9258 515.2305 333.0039 515.2305 331.6582 c515.2305 331.0176 515.0859 330.8066 514.0254 329.7441 c513.3125 329.0352 512.959 328.2559 512.959 327.334 c512.959 325.2773 514.4473 324.0723 516.9297 324.0723 c519.4063 324.0723 521.8184 325.4199 523.5938 327.9004 c525.7207 330.666 525.7207 330.666 529.4707 340.0898 c530.748 343.3516 531.7441 345.3379 533.8652 348.8809 c532.5938 348.9512 532.5176 348.9512 529.9688 349.2344 c529.043 349.3047 528.1953 349.377 527.3438 349.377 c525.0762 349.377 523.4492 348.2422 523.4492 346.6113 c523.4492 345.832 524.2266 344.8398 524.7969 344.8398 C526.4961 344.9121 lf*U*u586.3301 323.4355 m586.0488 322.2305 585.9023 321.3105 585.9023 320.9551 c585.9023 319.8926 586.8223 319.043 588.0293 319.043 c588.457 319.043 588.9531 319.1113 589.4473 319.3242 c590.4414 319.6074 590.8652 319.748 591.0781 319.748 c591.7148 319.748 592.2832 319.1836 592.2832 318.4746 c592.2832 315.4961 585.3398 311.3184 580.377 311.3184 c577.043 311.3184 574.6348 313.7266 574.6348 317.0566 c574.6348 317.4824 574.6348 318.0488 574.707 318.6875 c572.2969 315.7109 571.7988 315.1426 570.5938 314.0098 c568.8242 312.2383 566.3438 311.1758 564.3574 311.1758 c560.1738 311.1758 557.127 315.0723 557.127 320.5293 c557.127 330.0254 564.8516 339.3848 572.7227 339.3848 c575.4844 339.3848 577.8223 338.3184 579.5977 336.334 c583.0664 338.7441 584.1328 339.2402 586.0488 339.2402 c587.8887 339.2402 589.2363 338.1074 589.166 336.6191 c589.166 336.1934 589.0898 335.6953 588.9531 335.2012 C586.3301 323.4355 lf1 D570.5938 327.4746 m570.5938 325.7734 571.4473 324.7832 572.9355 324.7832 c574.8457 324.7832 576.6914 327.2617 576.6914 329.8145 c576.6914 331.1621 575.8418 332.0117 574.4941 332.0117 c572.4375 332.0117 570.5938 329.8145 570.5938 327.4746 cf*U*u0 D611.5371 338.959 m613.0273 338.959 613.6641 338.3184 613.6641 336.9746 c613.6641 335.4824 613.168 333.6426 612.6035 332.9316 c612.1055 332.3652 611.2559 332.084 610.1895 332.084 c606.4336 332.084 L605.3008 327.4043 604.3828 322.7988 604.3828 321.6641 c604.3828 319.8926 605.584 318.8301 607.5703 318.8301 c608.3477 318.8301 609.0547 319.043 610.4023 319.5371 c611.043 319.8203 611.6074 319.9629 612.0352 319.9629 c612.6738 319.9629 613.168 319.4668 613.168 318.7559 c613.168 317.5527 611.8945 315.9941 609.5566 314.3633 c607.0723 312.5918 603.7441 311.5293 600.6973 311.5293 c595.8047 311.5293 592.1895 314.5762 592.1895 318.6152 c592.1895 320.5293 592.3301 321.166 594.2461 327.1934 c595.0234 329.5293 595.2363 330.3828 595.5938 332.084 c593.8887 332.2949 593.1152 333.0039 593.1152 334.4219 c593.1152 336.1211 593.9609 337.1152 599.2031 341.4375 c603.8848 345.3379 606.5781 347.0371 608.2031 347.0371 c609.1289 347.0371 609.8379 346.3281 609.8379 345.4082 c609.8379 344.9824 609.8379 344.9824 608.7715 341.5801 c608.2773 339.9492 608.2773 339.8086 608.1387 338.959 C611.5371 338.959 lf*U*u632.6797 338.959 m634.1719 338.959 634.8105 338.3184 634.8105 336.9746 c634.8105 335.4824 634.3125 333.6426 633.7441 332.9316 c633.25 332.3652 632.4023 332.084 631.3359 332.084 c627.5801 332.084 L626.4492 327.4043 625.5273 322.7988 625.5273 321.6641 c625.5273 319.8926 626.7305 318.8301 628.7168 318.8301 c629.4922 318.8301 630.2031 319.043 631.5508 319.5371 c632.1855 319.8203 632.7539 319.9629 633.1758 319.9629 c633.8203 319.9629 634.3125 319.4668 634.3125 318.7559 c634.3125 317.5527 633.0352 315.9941 630.6973 314.3633 c628.2188 312.5918 624.8848 311.5293 621.8379 311.5293 c616.9492 311.5293 613.3359 314.5762 613.3359 318.6152 c613.3359 320.5293 613.4727 321.166 615.3926 327.1934 c616.166 329.5293 616.3828 330.3828 616.7402 332.084 c615.0352 332.2949 614.2559 333.0039 614.2559 334.4219 c614.2559 336.1211 615.1055 337.1152 620.3496 341.4375 c625.0313 345.3379 627.7207 347.0371 629.3496 347.0371 c630.2734 347.0371 630.9805 346.3281 630.9805 345.4082 c630.9805 344.9824 630.9805 344.9824 629.9219 341.5801 c629.4258 339.9492 629.4258 339.8086 629.2793 338.959 C632.6797 338.959 lf*U*u640.8438 348.0313 m641.0566 348.7383 641.127 349.5859 641.127 350.084 c641.127 351.2207 640.7695 351.7871 639.5664 352.3516 c642.334 354.9043 646.0898 356.4629 649.1328 356.4629 c651.6152 356.4629 653.1738 355.0449 653.1738 352.707 c653.1738 352.4238 653.1055 351.998 653.0332 351.5723 c649.4922 335.5547 L654.5215 338.959 655.9395 339.5254 659.0566 339.5254 c662.959 339.5254 665.5781 337.3262 665.5781 334.0684 c665.5781 333.1465 665.5078 332.5078 665.2969 331.6582 c663.5215 323.4355 L663.3125 322.4434 663.1699 321.5938 663.1699 321.2383 c663.1699 319.9629 664.0898 318.9707 665.2969 318.9707 c665.6484 318.9707 666.1465 319.043 666.5684 319.1836 c667.9863 319.748 668.0586 319.748 668.2734 319.748 c668.9102 319.748 669.4043 319.1836 669.4043 318.5469 c669.4043 315.4961 662.6719 311.3887 657.8555 311.3887 c653.8867 311.3887 651.0508 313.7949 651.0508 317.2695 c651.0508 317.7656 651.1211 318.2617 651.1934 318.6875 c652.8926 326.1289 L652.9629 326.6973 653.0332 327.1934 653.0332 327.6895 c653.0332 328.75 652.2539 329.5293 651.1211 329.5293 c648.9199 329.5293 647.7891 328.043 646.9395 324.2129 c645.2383 316.2773 L645.0273 315.2832 644.4609 314.2227 643.6797 313.4434 c642.6855 312.3789 641.8359 312.0957 639.8496 312.0957 c637.4414 312.0957 L635.6016 312.0957 634.4648 311.6699 632.6914 310.252 C640.8438 348.0313 lf*U*u681.5859 321.7363 m681.5859 320.1035 683.1445 318.8301 685.1309 318.8301 c687.75 318.8301 689.666 319.6074 694.4824 322.5137 c694.9844 322.7988 695.6895 323.0117 696.1875 323.0117 c697.1074 323.0117 697.8164 322.3027 697.8164 321.4512 c697.8164 319.8926 696.4688 318.0488 693.9883 316.0645 c689.8066 312.7344 685.4824 311.1016 681.0176 311.1016 c673.9297 311.1016 668.9004 315.9238 668.9004 322.7246 c668.9004 331.6582 677.6875 339.5254 687.6797 339.5254 c692.9961 339.5254 696.8965 336.4766 696.8965 332.1543 c696.8965 328.75 694.2734 325.7734 689.5254 323.7891 c687.2578 322.7988 684.0664 322.1602 681.5859 322.1602 C681.5859 321.7363 lf1 D687.9668 331.7285 m687.9668 332.6504 687.3281 333.3594 686.4785 333.3594 c684.7031 333.3594 683.0039 331.373 682.2949 328.5371 c686.125 329.1055 687.9668 330.0977 687.9668 331.7285 cf*U*u0 D701.4434 330.5234 m701.582 331.3027 701.7246 332.2246 701.7246 332.791 c701.7246 334.3516 701.3672 334.8496 700.166 335.4121 c703.2148 338.0371 706.6172 339.5254 709.5234 339.5254 c712.1426 339.5254 713.6309 338.1074 713.7734 335.4121 c717.8145 338.6035 720.1523 339.666 723.2695 339.666 c726.6035 339.666 728.7969 338.1777 729.5781 335.4121 c733.125 338.3184 736.1719 339.5957 739.6465 339.5957 c743.3262 339.5957 746.0215 337.2559 746.0215 333.9961 c746.0215 333.2871 745.9512 332.7207 745.8105 332.084 c743.8945 323.0117 L743.6836 322.3027 743.6133 321.5938 743.6133 321.2383 c743.6133 319.9629 744.4629 319.043 745.6699 319.043 c746.0215 319.043 746.5195 319.1836 747.0176 319.3242 c748.0078 319.6777 748.4355 319.8203 748.6465 319.8203 c749.2813 319.8203 749.7773 319.252 749.7773 318.5469 c749.7773 317.7656 749.0742 316.6309 747.7969 315.4297 c745.0313 312.875 741.4863 311.3887 738.0156 311.3887 c734.1152 311.3887 731.3496 313.7949 731.3496 317.1992 c731.3496 317.625 731.4199 318.1895 731.5625 318.6875 c733.2656 326.0566 L733.4063 326.5527 733.4766 327.0488 733.4766 327.4746 c733.4766 328.8203 732.7676 329.6016 731.5625 329.6016 c729.6504 329.6016 728.6602 328.3242 727.8789 324.9941 c726.1797 316.9844 L725.4688 313.7266 723.6973 312.0957 720.9316 312.0957 c717.9551 312.0957 L716.1152 312.0957 715.1914 311.7422 713.3496 310.1816 c716.8203 326.0566 L716.9648 326.6973 717.0352 327.2617 717.0352 327.9004 c717.0352 329.0352 716.3262 329.7441 715.2617 329.7441 c713.4199 329.7441 712.2129 328.2559 711.5078 324.9941 c709.7344 316.9844 L708.9551 313.3711 707.4668 312.0957 704.0625 312.0957 c701.7246 312.0957 L699.5273 312.0957 698.8203 311.8105 696.9082 310.1816 C701.4434 330.5234 lf*UUu248.2793 343.4453 m250.0645 341.8848 251.0215 340.127 250.8516 338.334 c250.7773 337.5703 250.5078 336.8457 250.0508 336.166 C251.668 335.7852 253.3984 335.498 255.2051 335.3262 c264.8281 334.4121 272.959 337.1387 273.3652 341.4121 c273.6484 344.3828 270.1211 347.3184 264.7188 349.1387 C263.1387 347.4199 261.1699 346.0195 258.668 345.0801 c255.5195 343.8984 251.9375 343.3516 248.2793 343.4453 Cf160.5 333.3086 m162.8594 332.291 165.2754 331.6094 167.6875 331.2402 C164.9805 331.8418 162.4844 332.5586 160.5 333.3086 Cfu*u1 D194.2441 302.2324 m148.9258 284.6602 194.5684 289.0801 232.2129 286.7344 c283.1348 283.5586 289.8965 229.7598 200.293 243.1777 c154.8984 249.9785 102.5977 298.1523 148.6309 342.666 c148.3789 342.4141 152.0469 338.8574 152.3105 338.6172 c153.9824 337.0996 155.8242 335.8242 157.8125 334.7539 c161.8633 332.5684 166.3105 331.2793 170.8359 330.5176 c173.3594 330.0938 175.9258 329.8594 178.4805 329.7383 c186.2852 329.3652 195.4902 329.7754 202.6309 333.252 c203.877 333.8594 206.4082 335.4355 206.5234 337.084 c206.6992 339.6035 203.8457 342.0684 199.2188 343.8965 c198.5313 344.1699 197.7988 344.4277 197.0352 344.6719 C195.2031 343.4668 193.0977 342.2832 193.5957 342.8711 c194.2148 343.6055 194.7578 344.3848 195.252 345.1895 c195.5781 345.7246 195.8828 346.2695 196.1582 346.832 C199.0625 354.4609 197.7949 362.832 193.3809 369.5801 C199.3164 363.0449 201.9648 354.4844 200.0508 346.5605 C206.5762 344.7324 210.8613 341.4414 210.6133 337.8691 c210.4824 335.9668 209.084 334.3105 206.8027 333.0234 C210.3926 333.3613 213.8594 333.9082 217.168 334.6367 C218.082 334.4082 219.0293 334.2051 220.0039 334.0254 c221.5039 333.748 223.0664 333.5254 224.6816 333.373 c236.5469 332.248 246.5273 335.166 246.9766 339.8984 c247.0977 341.1719 246.5059 342.4492 245.3535 343.6543 C243.6953 343.8516 242.043 344.1855 240.4238 344.6465 c239.2109 344.9922 238.0176 345.4043 236.8613 345.9004 c230.6152 348.5762 225.6055 353.0762 222.8047 358.4395 C225.4766 354.1543 229.625 350.4629 234.8867 348.1387 c246.375 343.0645 259.1016 346.2871 264.5723 355.248 C261.752 355.3379 258.9434 358.0977 258.5801 360.4336 c258.5 360.9512 258.543 361.4414 258.6758 361.8926 C263.0938 356.6387 265.8086 357.666 Y268.5469 364.1816 267.1855 371.5762 262.8262 377.541 C265.7891 375.1973 267.8594 372.7344 269.0859 370.0918 C278.3242 383.1504 L260.1328 380.6582 L257.8164 382.9453 255.002 384.9004 251.7578 386.334 c250.8359 386.7422 249.9043 387.0898 248.9688 387.3906 C248.4063 376.498 L245.041 393.3379 L233.6523 392.1191 227.7734 380.623 V228.2695 382.7637 228.9707 384.6328 229.8203 386.2637 c230.0195 386.6465 230.2227 387.0117 230.4355 387.3652 C221.4766 391.3066 210.2754 393.6543 198.1133 393.6543 c172.0039 393.6543 150.3066 382.8535 145.8027 368.6172 C145.6816 368.3652 145.3984 367.4336 145.2949 367.1738 C73.7207 328.3027 108.0566 263.6543 120.1563 248.168 c133.457 231.1523 162.3633 207.748 209.2461 203.8359 c356.5781 191.5488 325.0762 352.9551 194.2441 302.2324 cf0 D251.3809 348.9297 m249.2734 356.5918 L257.3047 353.1934 L251.3809 348.9297 Lf243.6602 370.4043 m243.8516 370.7891 L244.2246 364.3457 249.7266 362.8691 253.8477 364.0313 C249.0996 359.291 240.2598 363.6367 243.6602 370.4043 Cf*UUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF